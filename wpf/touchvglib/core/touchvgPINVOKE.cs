/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace touchvg.core {

using System;
using System.Runtime.InteropServices;

class touchvgPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("touchvg", EntryPoint="SWIGRegisterExceptionCallbacks_touchvg")]
    public static extern void SWIGRegisterExceptionCallbacks_touchvg(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("touchvg", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_touchvg")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_touchvg(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_touchvg(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_touchvg(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(touchvgPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(touchvgPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("touchvg", EntryPoint="SWIGRegisterStringCallback_touchvg")]
    public static extern void SWIGRegisterStringCallback_touchvg(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_touchvg(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static touchvgPINVOKE() {
  }


  [DllImport("touchvg", EntryPoint="CSharp__MGZERO_get")]
  public static extern float _MGZERO_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_E_get")]
  public static extern float _M_E_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_LOG2E_get")]
  public static extern float _M_LOG2E_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_LOG10E_get")]
  public static extern float _M_LOG10E_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_LN2_get")]
  public static extern float _M_LN2_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_LN10_get")]
  public static extern float _M_LN10_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_PI_get")]
  public static extern float _M_PI_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_PI_2_get")]
  public static extern float _M_PI_2_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_PI_4_get")]
  public static extern float _M_PI_4_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_1_PI_get")]
  public static extern float _M_1_PI_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_2_PI_get")]
  public static extern float _M_2_PI_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_2_SQRTPI_get")]
  public static extern float _M_2_SQRTPI_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_SQRT2_get")]
  public static extern float _M_SQRT2_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_SQRT1_2_get")]
  public static extern float _M_SQRT1_2_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_2PI_get")]
  public static extern float _M_2PI_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_PI_3_get")]
  public static extern float _M_PI_3_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_PI_6_get")]
  public static extern float _M_PI_6_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_D2R_get")]
  public static extern float _M_D2R_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_R2D_get")]
  public static extern float _M_R2D_get();

  [DllImport("touchvg", EntryPoint="CSharp__M_1_SQRPI_get")]
  public static extern float _M_1_SQRPI_get();

  [DllImport("touchvg", EntryPoint="CSharp__FLT_MIN_get")]
  public static extern float _FLT_MIN_get();

  [DllImport("touchvg", EntryPoint="CSharp__FLT_MAX_get")]
  public static extern float _FLT_MAX_get();

  [DllImport("touchvg", EntryPoint="CSharp_mgRound")]
  public static extern int mgRound(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Tol_gTol")]
  public static extern IntPtr Tol_gTol();

  [DllImport("touchvg", EntryPoint="CSharp_Tol_minTol")]
  public static extern IntPtr Tol_minTol();

  [DllImport("touchvg", EntryPoint="CSharp_new_Tol__SWIG_0")]
  public static extern IntPtr new_Tol__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_Tol__SWIG_1")]
  public static extern IntPtr new_Tol__SWIG_1(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Tol__SWIG_2")]
  public static extern IntPtr new_Tol__SWIG_2(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Tol_equalPoint")]
  public static extern float Tol_equalPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Tol_equalVector")]
  public static extern float Tol_equalVector(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Tol_setEqualPoint")]
  public static extern void Tol_setEqualPoint(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Tol_setEqualVector")]
  public static extern void Tol_setEqualVector(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Tol")]
  public static extern void delete_Tol(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_x_set")]
  public static extern void Vector2d_x_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_x_get")]
  public static extern float Vector2d_x_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_y_set")]
  public static extern void Vector2d_y_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_y_get")]
  public static extern float Vector2d_y_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_kIdentity")]
  public static extern IntPtr Vector2d_kIdentity();

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_kXAxis")]
  public static extern IntPtr Vector2d_kXAxis();

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_kYAxis")]
  public static extern IntPtr Vector2d_kYAxis();

  [DllImport("touchvg", EntryPoint="CSharp_new_Vector2d__SWIG_0")]
  public static extern IntPtr new_Vector2d__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_Vector2d__SWIG_1")]
  public static extern IntPtr new_Vector2d__SWIG_1(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Vector2d__SWIG_2")]
  public static extern IntPtr new_Vector2d__SWIG_2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_transform")]
  public static extern IntPtr Vector2d_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_add")]
  public static extern IntPtr Vector2d_add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_subtract")]
  public static extern IntPtr Vector2d_subtract(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_negate")]
  public static extern IntPtr Vector2d_negate(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_perpVector")]
  public static extern IntPtr Vector2d_perpVector(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_scaleBy__SWIG_0")]
  public static extern IntPtr Vector2d_scaleBy__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_scaleBy__SWIG_1")]
  public static extern IntPtr Vector2d_scaleBy__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_dotProduct")]
  public static extern float Vector2d_dotProduct(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_crossProduct")]
  public static extern float Vector2d_crossProduct(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_angle")]
  public static extern float Vector2d_angle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_angle2")]
  public static extern float Vector2d_angle2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_angleTo")]
  public static extern float Vector2d_angleTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_angleTo2")]
  public static extern float Vector2d_angleTo2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_length")]
  public static extern float Vector2d_length(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_lengthSqrd")]
  public static extern float Vector2d_lengthSqrd(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_unitVector")]
  public static extern IntPtr Vector2d_unitVector(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_normalize__SWIG_0")]
  public static extern bool Vector2d_normalize__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_normalize__SWIG_1")]
  public static extern bool Vector2d_normalize__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isUnitVector__SWIG_0")]
  public static extern bool Vector2d_isUnitVector__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isUnitVector__SWIG_1")]
  public static extern bool Vector2d_isUnitVector__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isZeroVector__SWIG_0")]
  public static extern bool Vector2d_isZeroVector__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isZeroVector__SWIG_1")]
  public static extern bool Vector2d_isZeroVector__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isEqualTo__SWIG_0")]
  public static extern bool Vector2d_isEqualTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isEqualTo__SWIG_1")]
  public static extern bool Vector2d_isEqualTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_set")]
  public static extern IntPtr Vector2d_set(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_setAngleLength")]
  public static extern IntPtr Vector2d_setAngleLength(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_setLength")]
  public static extern IntPtr Vector2d_setLength(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isRightOf")]
  public static extern bool Vector2d_isRightOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isLeftOf")]
  public static extern bool Vector2d_isLeftOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isParallelTo__SWIG_0")]
  public static extern bool Vector2d_isParallelTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isParallelTo__SWIG_1")]
  public static extern bool Vector2d_isParallelTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isCodirectionalTo__SWIG_0")]
  public static extern bool Vector2d_isCodirectionalTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isCodirectionalTo__SWIG_1")]
  public static extern bool Vector2d_isCodirectionalTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isOppositeTo__SWIG_0")]
  public static extern bool Vector2d_isOppositeTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isOppositeTo__SWIG_1")]
  public static extern bool Vector2d_isOppositeTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isPerpendicularTo__SWIG_0")]
  public static extern bool Vector2d_isPerpendicularTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_isPerpendicularTo__SWIG_1")]
  public static extern bool Vector2d_isPerpendicularTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_distanceToVector")]
  public static extern float Vector2d_distanceToVector(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_projectScaleToVector")]
  public static extern float Vector2d_projectScaleToVector(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_projectResolveVector")]
  public static extern float Vector2d_projectResolveVector(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_resolveVector__SWIG_0")]
  public static extern bool Vector2d_resolveVector__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Vector2d_resolveVector__SWIG_1")]
  public static extern bool Vector2d_resolveVector__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Vector2d")]
  public static extern void delete_Vector2d(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_x_set")]
  public static extern void Point2d_x_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_x_get")]
  public static extern float Point2d_x_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_y_set")]
  public static extern void Point2d_y_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_y_get")]
  public static extern float Point2d_y_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_kOrigin")]
  public static extern IntPtr Point2d_kOrigin();

  [DllImport("touchvg", EntryPoint="CSharp_new_Point2d__SWIG_0")]
  public static extern IntPtr new_Point2d__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_Point2d__SWIG_1")]
  public static extern IntPtr new_Point2d__SWIG_1(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Point2d__SWIG_2")]
  public static extern IntPtr new_Point2d__SWIG_2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_transform")]
  public static extern IntPtr Point2d_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_scaleBy__SWIG_0")]
  public static extern IntPtr Point2d_scaleBy__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_scaleBy__SWIG_1")]
  public static extern IntPtr Point2d_scaleBy__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_offset__SWIG_0")]
  public static extern void Point2d_offset__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_offset__SWIG_1")]
  public static extern void Point2d_offset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_add")]
  public static extern IntPtr Point2d_add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_subtract__SWIG_0")]
  public static extern IntPtr Point2d_subtract__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_subtract__SWIG_1")]
  public static extern IntPtr Point2d_subtract__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_negate")]
  public static extern IntPtr Point2d_negate(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_asVector")]
  public static extern IntPtr Point2d_asVector(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_length")]
  public static extern float Point2d_length(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_distanceTo")]
  public static extern float Point2d_distanceTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_distanceSquare")]
  public static extern float Point2d_distanceSquare(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_isEqualTo__SWIG_0")]
  public static extern bool Point2d_isEqualTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_isEqualTo__SWIG_1")]
  public static extern bool Point2d_isEqualTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_set")]
  public static extern IntPtr Point2d_set(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_polarPoint")]
  public static extern IntPtr Point2d_polarPoint(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_rulerPoint__SWIG_0")]
  public static extern IntPtr Point2d_rulerPoint__SWIG_0(HandleRef jarg1, HandleRef jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Point2d_rulerPoint__SWIG_1")]
  public static extern IntPtr Point2d_rulerPoint__SWIG_1(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Point2d")]
  public static extern void delete_Point2d(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m11_set")]
  public static extern void Matrix2d_m11_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m11_get")]
  public static extern float Matrix2d_m11_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m12_set")]
  public static extern void Matrix2d_m12_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m12_get")]
  public static extern float Matrix2d_m12_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m21_set")]
  public static extern void Matrix2d_m21_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m21_get")]
  public static extern float Matrix2d_m21_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m22_set")]
  public static extern void Matrix2d_m22_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_m22_get")]
  public static extern float Matrix2d_m22_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_dx_set")]
  public static extern void Matrix2d_dx_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_dx_get")]
  public static extern float Matrix2d_dx_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_dy_set")]
  public static extern void Matrix2d_dy_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_dy_get")]
  public static extern float Matrix2d_dy_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_kIdentity")]
  public static extern IntPtr Matrix2d_kIdentity();

  [DllImport("touchvg", EntryPoint="CSharp_new_Matrix2d__SWIG_0")]
  public static extern IntPtr new_Matrix2d__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_Matrix2d__SWIG_1")]
  public static extern IntPtr new_Matrix2d__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Matrix2d__SWIG_2")]
  public static extern IntPtr new_Matrix2d__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_new_Matrix2d__SWIG_3")]
  public static extern IntPtr new_Matrix2d__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_preMultBy")]
  public static extern IntPtr Matrix2d_preMultBy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_postMultBy")]
  public static extern IntPtr Matrix2d_postMultBy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToProduct")]
  public static extern IntPtr Matrix2d_setToProduct(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_TransformPoints")]
  public static extern void Matrix2d_TransformPoints(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_TransformVectors")]
  public static extern void Matrix2d_TransformVectors(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_det")]
  public static extern float Matrix2d_det(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_invert")]
  public static extern bool Matrix2d_invert(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_inverse")]
  public static extern IntPtr Matrix2d_inverse(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_isInvertible")]
  public static extern bool Matrix2d_isInvertible(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scale")]
  public static extern float Matrix2d_scale(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scaleX")]
  public static extern float Matrix2d_scaleX(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scaleY")]
  public static extern float Matrix2d_scaleY(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_angle")]
  public static extern float Matrix2d_angle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_isEqualTo__SWIG_0")]
  public static extern bool Matrix2d_isEqualTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_isEqualTo__SWIG_1")]
  public static extern bool Matrix2d_isEqualTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_isIdentity")]
  public static extern bool Matrix2d_isIdentity(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_isOrtho")]
  public static extern bool Matrix2d_isOrtho(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_hasMirror")]
  public static extern bool Matrix2d_hasMirror(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setCoordSystem")]
  public static extern IntPtr Matrix2d_setCoordSystem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_getCoordSystem")]
  public static extern void Matrix2d_getCoordSystem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_coordSystem__SWIG_0")]
  public static extern IntPtr Matrix2d_coordSystem__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_coordSystem__SWIG_1")]
  public static extern IntPtr Matrix2d_coordSystem__SWIG_1(HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_coordSystem__SWIG_2")]
  public static extern IntPtr Matrix2d_coordSystem__SWIG_2(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_coordSystem__SWIG_3")]
  public static extern IntPtr Matrix2d_coordSystem__SWIG_3(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToIdentity")]
  public static extern IntPtr Matrix2d_setToIdentity(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_set")]
  public static extern IntPtr Matrix2d_set(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToTranslation")]
  public static extern IntPtr Matrix2d_setToTranslation(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToRotation__SWIG_0")]
  public static extern IntPtr Matrix2d_setToRotation__SWIG_0(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToRotation__SWIG_1")]
  public static extern IntPtr Matrix2d_setToRotation__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToScaling__SWIG_0")]
  public static extern IntPtr Matrix2d_setToScaling__SWIG_0(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToScaling__SWIG_1")]
  public static extern IntPtr Matrix2d_setToScaling__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToScaling__SWIG_2")]
  public static extern IntPtr Matrix2d_setToScaling__SWIG_2(HandleRef jarg1, float jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToScaling__SWIG_3")]
  public static extern IntPtr Matrix2d_setToScaling__SWIG_3(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToMirroring__SWIG_0")]
  public static extern IntPtr Matrix2d_setToMirroring__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToMirroring__SWIG_1")]
  public static extern IntPtr Matrix2d_setToMirroring__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToMirroring__SWIG_2")]
  public static extern IntPtr Matrix2d_setToMirroring__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToShearing__SWIG_0")]
  public static extern IntPtr Matrix2d_setToShearing__SWIG_0(HandleRef jarg1, float jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_setToShearing__SWIG_1")]
  public static extern IntPtr Matrix2d_setToShearing__SWIG_1(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_translation")]
  public static extern IntPtr Matrix2d_translation(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_rotation__SWIG_0")]
  public static extern IntPtr Matrix2d_rotation__SWIG_0(float jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_rotation__SWIG_1")]
  public static extern IntPtr Matrix2d_rotation__SWIG_1(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scaling__SWIG_0")]
  public static extern IntPtr Matrix2d_scaling__SWIG_0(float jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scaling__SWIG_1")]
  public static extern IntPtr Matrix2d_scaling__SWIG_1(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scaling__SWIG_2")]
  public static extern IntPtr Matrix2d_scaling__SWIG_2(float jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_scaling__SWIG_3")]
  public static extern IntPtr Matrix2d_scaling__SWIG_3(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_mirroring__SWIG_0")]
  public static extern IntPtr Matrix2d_mirroring__SWIG_0(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_mirroring__SWIG_1")]
  public static extern IntPtr Matrix2d_mirroring__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_mirroring__SWIG_2")]
  public static extern IntPtr Matrix2d_mirroring__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_shearing__SWIG_0")]
  public static extern IntPtr Matrix2d_shearing__SWIG_0(float jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Matrix2d_shearing__SWIG_1")]
  public static extern IntPtr Matrix2d_shearing__SWIG_1(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Matrix2d")]
  public static extern void delete_Matrix2d(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_left_set")]
  public static extern void RECT_2D_left_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_left_get")]
  public static extern float RECT_2D_left_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_top_set")]
  public static extern void RECT_2D_top_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_top_get")]
  public static extern float RECT_2D_top_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_right_set")]
  public static extern void RECT_2D_right_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_right_get")]
  public static extern float RECT_2D_right_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_bottom_set")]
  public static extern void RECT_2D_bottom_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_bottom_get")]
  public static extern float RECT_2D_bottom_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_RECT_2D")]
  public static extern IntPtr new_RECT_2D();

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_width")]
  public static extern float RECT_2D_width(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_RECT_2D_height")]
  public static extern float RECT_2D_height(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_RECT_2D")]
  public static extern void delete_RECT_2D(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_xmin_set")]
  public static extern void Box2d_xmin_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_xmin_get")]
  public static extern float Box2d_xmin_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_ymin_set")]
  public static extern void Box2d_ymin_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_ymin_get")]
  public static extern float Box2d_ymin_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_xmax_set")]
  public static extern void Box2d_xmax_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_xmax_get")]
  public static extern float Box2d_xmax_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_ymax_set")]
  public static extern void Box2d_ymax_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_ymax_get")]
  public static extern float Box2d_ymax_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_kIdentity")]
  public static extern IntPtr Box2d_kIdentity();

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_0")]
  public static extern IntPtr new_Box2d__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_1")]
  public static extern IntPtr new_Box2d__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_2")]
  public static extern IntPtr new_Box2d__SWIG_2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_3")]
  public static extern IntPtr new_Box2d__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_4")]
  public static extern IntPtr new_Box2d__SWIG_4(float jarg1, float jarg2, float jarg3, float jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_5")]
  public static extern IntPtr new_Box2d__SWIG_5(float jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_6")]
  public static extern IntPtr new_Box2d__SWIG_6(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_7")]
  public static extern IntPtr new_Box2d__SWIG_7(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_8")]
  public static extern IntPtr new_Box2d__SWIG_8(int jarg1, int jarg2, int jarg3, int jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_9")]
  public static extern IntPtr new_Box2d__SWIG_9(int jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_10")]
  public static extern IntPtr new_Box2d__SWIG_10(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_11")]
  public static extern IntPtr new_Box2d__SWIG_11(int jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_12")]
  public static extern IntPtr new_Box2d__SWIG_12(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_Box2d__SWIG_13")]
  public static extern IntPtr new_Box2d__SWIG_13(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_get__SWIG_0")]
  public static extern void Box2d_get__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_get__SWIG_1")]
  public static extern IntPtr Box2d_get__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_0")]
  public static extern IntPtr Box2d_set__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_1")]
  public static extern IntPtr Box2d_set__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_2")]
  public static extern IntPtr Box2d_set__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_3")]
  public static extern IntPtr Box2d_set__SWIG_3(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_4")]
  public static extern IntPtr Box2d_set__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_5")]
  public static extern IntPtr Box2d_set__SWIG_5(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_set__SWIG_6")]
  public static extern IntPtr Box2d_set__SWIG_6(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_width")]
  public static extern float Box2d_width(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_height")]
  public static extern float Box2d_height(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_size")]
  public static extern IntPtr Box2d_size(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_center")]
  public static extern IntPtr Box2d_center(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_leftTop")]
  public static extern IntPtr Box2d_leftTop(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_rightTop")]
  public static extern IntPtr Box2d_rightTop(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_leftBottom")]
  public static extern IntPtr Box2d_leftBottom(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_rightBottom")]
  public static extern IntPtr Box2d_rightBottom(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_normalize")]
  public static extern IntPtr Box2d_normalize(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_swapTopBottom")]
  public static extern IntPtr Box2d_swapTopBottom(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_empty")]
  public static extern IntPtr Box2d_empty(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isNormalized")]
  public static extern bool Box2d_isNormalized(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isNull")]
  public static extern bool Box2d_isNull(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEmpty__SWIG_0")]
  public static extern bool Box2d_isEmpty__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEmpty__SWIG_1")]
  public static extern bool Box2d_isEmpty__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEmpty__SWIG_2")]
  public static extern bool Box2d_isEmpty__SWIG_2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEmptyMinus__SWIG_0")]
  public static extern bool Box2d_isEmptyMinus__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEmptyMinus__SWIG_1")]
  public static extern bool Box2d_isEmptyMinus__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_contains__SWIG_0")]
  public static extern bool Box2d_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_contains__SWIG_1")]
  public static extern bool Box2d_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_contains__SWIG_2")]
  public static extern bool Box2d_contains__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_contains__SWIG_3")]
  public static extern bool Box2d_contains__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_inflate__SWIG_0")]
  public static extern IntPtr Box2d_inflate__SWIG_0(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_inflate__SWIG_1")]
  public static extern IntPtr Box2d_inflate__SWIG_1(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_inflate__SWIG_2")]
  public static extern IntPtr Box2d_inflate__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_inflate__SWIG_3")]
  public static extern IntPtr Box2d_inflate__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_inflate__SWIG_4")]
  public static extern IntPtr Box2d_inflate__SWIG_4(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_deflate__SWIG_0")]
  public static extern IntPtr Box2d_deflate__SWIG_0(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_deflate__SWIG_1")]
  public static extern IntPtr Box2d_deflate__SWIG_1(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_deflate__SWIG_2")]
  public static extern IntPtr Box2d_deflate__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_deflate__SWIG_3")]
  public static extern IntPtr Box2d_deflate__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_deflate__SWIG_4")]
  public static extern IntPtr Box2d_deflate__SWIG_4(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_offset__SWIG_0")]
  public static extern IntPtr Box2d_offset__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_offset__SWIG_1")]
  public static extern IntPtr Box2d_offset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_scaleBy__SWIG_0")]
  public static extern IntPtr Box2d_scaleBy__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_scaleBy__SWIG_1")]
  public static extern IntPtr Box2d_scaleBy__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isIntersect")]
  public static extern bool Box2d_isIntersect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_intersectWith__SWIG_0")]
  public static extern IntPtr Box2d_intersectWith__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_intersectWith__SWIG_1")]
  public static extern IntPtr Box2d_intersectWith__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_unionWith__SWIG_0")]
  public static extern IntPtr Box2d_unionWith__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_unionWith__SWIG_1")]
  public static extern IntPtr Box2d_unionWith__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_unionWith__SWIG_2")]
  public static extern IntPtr Box2d_unionWith__SWIG_2(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_unionWith__SWIG_3")]
  public static extern IntPtr Box2d_unionWith__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_offset__SWIG_2")]
  public static extern IntPtr Box2d_offset__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEqualTo__SWIG_0")]
  public static extern bool Box2d_isEqualTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Box2d_isEqualTo__SWIG_1")]
  public static extern bool Box2d_isEqualTo__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Box2d")]
  public static extern void delete_Box2d(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_BoundBox__SWIG_0")]
  public static extern IntPtr new_BoundBox__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_BoundBox__SWIG_1")]
  public static extern IntPtr new_BoundBox__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_BoundBox__SWIG_2")]
  public static extern IntPtr new_BoundBox__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_BoundBox__SWIG_3")]
  public static extern IntPtr new_BoundBox__SWIG_3(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_getMinMaxPoints")]
  public static extern void BoundBox_getMinMaxPoints(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_get")]
  public static extern void BoundBox_get(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_set__SWIG_0")]
  public static extern IntPtr BoundBox_set__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_set__SWIG_1")]
  public static extern IntPtr BoundBox_set__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_extend")]
  public static extern IntPtr BoundBox_extend(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_swell")]
  public static extern IntPtr BoundBox_swell(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_contains")]
  public static extern bool BoundBox_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_isDisjoint")]
  public static extern bool BoundBox_isDisjoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_isRect")]
  public static extern bool BoundBox_isRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_BoundBox_setToRect")]
  public static extern IntPtr BoundBox_setToRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_BoundBox")]
  public static extern void delete_BoundBox(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_toRange")]
  public static extern float mgbase_toRange(float jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_to0_2PI")]
  public static extern float mgbase_to0_2PI(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_toPI")]
  public static extern float mgbase_toPI(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_deg2Rad")]
  public static extern float mgbase_deg2Rad(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_rad2Deg")]
  public static extern float mgbase_rad2Deg(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_dms2Deg")]
  public static extern float mgbase_dms2Deg(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_deg2Dms")]
  public static extern float mgbase_deg2Dms(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_getMidAngle")]
  public static extern float mgbase_getMidAngle(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_getDiffAngle")]
  public static extern float mgbase_getDiffAngle(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_getGcd")]
  public static extern int mgbase_getGcd(int jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_mgbase_roundReal")]
  public static extern float mgbase_roundReal(float jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_mgbase")]
  public static extern IntPtr new_mgbase();

  [DllImport("touchvg", EntryPoint="CSharp_delete_mgbase")]
  public static extern void delete_mgbase(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_fitBezier")]
  public static extern void mgcurv_fitBezier(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_splitBezier")]
  public static extern void mgcurv_splitBezier(HandleRef jarg1, float jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_bezier4P")]
  public static extern void mgcurv_bezier4P(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_ellipse90ToBezier")]
  public static extern void mgcurv_ellipse90ToBezier(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_ellipseToBezier")]
  public static extern void mgcurv_ellipseToBezier(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_roundRectToBeziers")]
  public static extern void mgcurv_roundRectToBeziers(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_arcToBezier")]
  public static extern int mgcurv_arcToBezier(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_insectTwoCircles")]
  public static extern int mgcurv_insectTwoCircles(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, HandleRef jarg5, float jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_cubicSplines__SWIG_0")]
  public static extern bool mgcurv_cubicSplines__SWIG_0(int jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_cubicSplines__SWIG_1")]
  public static extern bool mgcurv_cubicSplines__SWIG_1(int jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_cubicSplines__SWIG_2")]
  public static extern bool mgcurv_cubicSplines__SWIG_2(int jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_fitCubicSpline")]
  public static extern void mgcurv_fitCubicSpline(int jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, float jarg5, HandleRef jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_cubicSplineToBezier")]
  public static extern void mgcurv_cubicSplineToBezier(int jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_mgcurv_bsplinesToBeziers")]
  public static extern int mgcurv_bsplinesToBeziers(HandleRef jarg1, int jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_mgcurv")]
  public static extern IntPtr new_mgcurv();

  [DllImport("touchvg", EntryPoint="CSharp_delete_mgcurv")]
  public static extern void delete_mgcurv(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isLeft")]
  public static extern bool mglnrel_isLeft(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isLeft2")]
  public static extern bool mglnrel_isLeft2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isLeftOn")]
  public static extern bool mglnrel_isLeftOn(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isLeftOn2")]
  public static extern bool mglnrel_isLeftOn2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isColinear")]
  public static extern bool mglnrel_isColinear(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isColinear2")]
  public static extern bool mglnrel_isColinear2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isIntersectProp")]
  public static extern bool mglnrel_isIntersectProp(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isBetweenLine")]
  public static extern bool mglnrel_isBetweenLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isBetweenLine2")]
  public static extern bool mglnrel_isBetweenLine2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isBetweenLine3__SWIG_0")]
  public static extern bool mglnrel_isBetweenLine3__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isBetweenLine3__SWIG_1")]
  public static extern bool mglnrel_isBetweenLine3__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_isIntersect")]
  public static extern bool mglnrel_isIntersect(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_ptToBeeline")]
  public static extern float mglnrel_ptToBeeline(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_ptToBeeline2")]
  public static extern float mglnrel_ptToBeeline2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_ptToLine")]
  public static extern float mglnrel_ptToLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_crossLineAbc__SWIG_0")]
  public static extern bool mglnrel_crossLineAbc__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, HandleRef jarg7, HandleRef jarg8);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_crossLineAbc__SWIG_1")]
  public static extern bool mglnrel_crossLineAbc__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, HandleRef jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_cross2Line__SWIG_0")]
  public static extern bool mglnrel_cross2Line__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_cross2Line__SWIG_1")]
  public static extern bool mglnrel_cross2Line__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_mglnrel_clipLine")]
  public static extern bool mglnrel_clipLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_mglnrel")]
  public static extern IntPtr new_mglnrel();

  [DllImport("touchvg", EntryPoint="CSharp_delete_mglnrel")]
  public static extern void delete_mglnrel(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_nearestOnBezier")]
  public static extern float mgnear_nearestOnBezier(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_beziersBox__SWIG_0")]
  public static extern void mgnear_beziersBox__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_beziersBox__SWIG_1")]
  public static extern void mgnear_beziersBox__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_beziersIntersectBox__SWIG_0")]
  public static extern bool mgnear_beziersIntersectBox__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_beziersIntersectBox__SWIG_1")]
  public static extern bool mgnear_beziersIntersectBox__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_cubicSplinesBox__SWIG_0")]
  public static extern void mgnear_cubicSplinesBox__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_cubicSplinesBox__SWIG_1")]
  public static extern void mgnear_cubicSplinesBox__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_cubicSplinesIntersectBox__SWIG_0")]
  public static extern bool mgnear_cubicSplinesIntersectBox__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_cubicSplinesIntersectBox__SWIG_1")]
  public static extern bool mgnear_cubicSplinesIntersectBox__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_getRectHandle")]
  public static extern void mgnear_getRectHandle(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_moveRectHandle__SWIG_0")]
  public static extern void mgnear_moveRectHandle__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_mgnear_moveRectHandle__SWIG_1")]
  public static extern void mgnear_moveRectHandle__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_mgnear")]
  public static extern IntPtr new_mgnear();

  [DllImport("touchvg", EntryPoint="CSharp_delete_mgnear")]
  public static extern void delete_mgnear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiCanvas")]
  public static extern void delete_GiCanvas(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_setPen")]
  public static extern void GiCanvas_setPen(HandleRef jarg1, int jarg2, float jarg3, int jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_setBrush")]
  public static extern void GiCanvas_setBrush(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_clearRect")]
  public static extern void GiCanvas_clearRect(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawRect")]
  public static extern void GiCanvas_drawRect(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5, bool jarg6, bool jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawLine")]
  public static extern void GiCanvas_drawLine(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawEllipse")]
  public static extern void GiCanvas_drawEllipse(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5, bool jarg6, bool jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_beginPath")]
  public static extern void GiCanvas_beginPath(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_moveTo")]
  public static extern void GiCanvas_moveTo(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_lineTo")]
  public static extern void GiCanvas_lineTo(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_bezierTo")]
  public static extern void GiCanvas_bezierTo(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_quadTo")]
  public static extern void GiCanvas_quadTo(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_closePath")]
  public static extern void GiCanvas_closePath(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawPath")]
  public static extern void GiCanvas_drawPath(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_saveClip")]
  public static extern void GiCanvas_saveClip(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_restoreClip")]
  public static extern void GiCanvas_restoreClip(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_clipRect")]
  public static extern bool GiCanvas_clipRect(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_clipPath")]
  public static extern bool GiCanvas_clipPath(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawHandle")]
  public static extern void GiCanvas_drawHandle(HandleRef jarg1, float jarg2, float jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawBitmap")]
  public static extern void GiCanvas_drawBitmap(HandleRef jarg1, string jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_drawTextAt")]
  public static extern float GiCanvas_drawTextAt(HandleRef jarg1, string jarg2, float jarg3, float jarg4, float jarg5, int jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiCanvas")]
  public static extern IntPtr new_GiCanvas();

  [DllImport("touchvg", EntryPoint="CSharp_GiCanvas_director_connect")]
  public static extern void GiCanvas_director_connect(HandleRef jarg1, GiCanvas.SwigDelegateGiCanvas_0 delegate0, GiCanvas.SwigDelegateGiCanvas_1 delegate1, GiCanvas.SwigDelegateGiCanvas_2 delegate2, GiCanvas.SwigDelegateGiCanvas_3 delegate3, GiCanvas.SwigDelegateGiCanvas_4 delegate4, GiCanvas.SwigDelegateGiCanvas_5 delegate5, GiCanvas.SwigDelegateGiCanvas_6 delegate6, GiCanvas.SwigDelegateGiCanvas_7 delegate7, GiCanvas.SwigDelegateGiCanvas_8 delegate8, GiCanvas.SwigDelegateGiCanvas_9 delegate9, GiCanvas.SwigDelegateGiCanvas_10 delegate10, GiCanvas.SwigDelegateGiCanvas_11 delegate11, GiCanvas.SwigDelegateGiCanvas_12 delegate12, GiCanvas.SwigDelegateGiCanvas_13 delegate13, GiCanvas.SwigDelegateGiCanvas_14 delegate14, GiCanvas.SwigDelegateGiCanvas_15 delegate15, GiCanvas.SwigDelegateGiCanvas_16 delegate16, GiCanvas.SwigDelegateGiCanvas_17 delegate17, GiCanvas.SwigDelegateGiCanvas_18 delegate18, GiCanvas.SwigDelegateGiCanvas_19 delegate19);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_r_set")]
  public static extern void GiColor_r_set(HandleRef jarg1, byte jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_r_get")]
  public static extern byte GiColor_r_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_g_set")]
  public static extern void GiColor_g_set(HandleRef jarg1, byte jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_g_get")]
  public static extern byte GiColor_g_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_b_set")]
  public static extern void GiColor_b_set(HandleRef jarg1, byte jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_b_get")]
  public static extern byte GiColor_b_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_a_set")]
  public static extern void GiColor_a_set(HandleRef jarg1, byte jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_a_get")]
  public static extern byte GiColor_a_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiColor__SWIG_0")]
  public static extern IntPtr new_GiColor__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_GiColor__SWIG_1")]
  public static extern IntPtr new_GiColor__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiColor__SWIG_2")]
  public static extern IntPtr new_GiColor__SWIG_2(int jarg1, int jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiColor__SWIG_3")]
  public static extern IntPtr new_GiColor__SWIG_3(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiColor__SWIG_4")]
  public static extern IntPtr new_GiColor__SWIG_4(int jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiColor__SWIG_5")]
  public static extern IntPtr new_GiColor__SWIG_5(int jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_White")]
  public static extern IntPtr GiColor_White();

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_Black")]
  public static extern IntPtr GiColor_Black();

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_Invalid")]
  public static extern IntPtr GiColor_Invalid();

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_getARGB")]
  public static extern int GiColor_getARGB(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_setARGB")]
  public static extern void GiColor_setARGB(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_set__SWIG_0")]
  public static extern void GiColor_set__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_set__SWIG_1")]
  public static extern void GiColor_set__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_isInvalid")]
  public static extern bool GiColor_isInvalid(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiColor_equals")]
  public static extern bool GiColor_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiColor")]
  public static extern void delete_GiColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_0")]
  public static extern IntPtr new_GiContext__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_1")]
  public static extern IntPtr new_GiContext__SWIG_1(float jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_2")]
  public static extern IntPtr new_GiContext__SWIG_2(float jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_3")]
  public static extern IntPtr new_GiContext__SWIG_3(float jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_4")]
  public static extern IntPtr new_GiContext__SWIG_4(float jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_5")]
  public static extern IntPtr new_GiContext__SWIG_5(float jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiContext__SWIG_6")]
  public static extern IntPtr new_GiContext__SWIG_6(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_copy__SWIG_0")]
  public static extern IntPtr GiContext_copy__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_copy__SWIG_1")]
  public static extern IntPtr GiContext_copy__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_equals")]
  public static extern bool GiContext_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getLineStyle")]
  public static extern int GiContext_getLineStyle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineStyle")]
  public static extern void GiContext_setLineStyle(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getLineWidth")]
  public static extern float GiContext_getLineWidth(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_isAutoScale")]
  public static extern bool GiContext_isAutoScale(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineWidth")]
  public static extern void GiContext_setLineWidth(HandleRef jarg1, float jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_isNullLine")]
  public static extern bool GiContext_isNullLine(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setNullLine")]
  public static extern void GiContext_setNullLine(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getLineColor")]
  public static extern IntPtr GiContext_getLineColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineColor__SWIG_0")]
  public static extern void GiContext_setLineColor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineColor__SWIG_1")]
  public static extern void GiContext_setLineColor__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineColor__SWIG_2")]
  public static extern void GiContext_setLineColor__SWIG_2(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getLineARGB")]
  public static extern int GiContext_getLineARGB(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineARGB")]
  public static extern void GiContext_setLineARGB(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getLineAlpha")]
  public static extern int GiContext_getLineAlpha(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setLineAlpha")]
  public static extern void GiContext_setLineAlpha(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_hasFillColor")]
  public static extern bool GiContext_hasFillColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setNoFillColor")]
  public static extern void GiContext_setNoFillColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getFillColor")]
  public static extern IntPtr GiContext_getFillColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setFillColor__SWIG_0")]
  public static extern void GiContext_setFillColor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setFillColor__SWIG_1")]
  public static extern void GiContext_setFillColor__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setFillColor__SWIG_2")]
  public static extern void GiContext_setFillColor__SWIG_2(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getFillARGB")]
  public static extern int GiContext_getFillARGB(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setFillARGB")]
  public static extern void GiContext_setFillARGB(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getFillAlpha")]
  public static extern int GiContext_getFillAlpha(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setFillAlpha")]
  public static extern void GiContext_setFillAlpha(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_isAutoFillColor")]
  public static extern bool GiContext_isAutoFillColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_setAutoFillColor")]
  public static extern void GiContext_setAutoFillColor(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiContext_getType")]
  public static extern int GiContext_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiContext")]
  public static extern void delete_GiContext(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiTransform__SWIG_0")]
  public static extern IntPtr new_GiTransform__SWIG_0(bool jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiTransform__SWIG_1")]
  public static extern IntPtr new_GiTransform__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_new_GiTransform__SWIG_2")]
  public static extern IntPtr new_GiTransform__SWIG_2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiTransform")]
  public static extern void delete_GiTransform(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_copy")]
  public static extern IntPtr GiTransform_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getDpiX")]
  public static extern float GiTransform_getDpiX(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getDpiY")]
  public static extern float GiTransform_getDpiY(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWidth")]
  public static extern int GiTransform_getWidth(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getHeight")]
  public static extern int GiTransform_getHeight(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getCenterW")]
  public static extern IntPtr GiTransform_getCenterW(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getViewScale")]
  public static extern float GiTransform_getViewScale(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWorldToDisplayX__SWIG_0")]
  public static extern float GiTransform_getWorldToDisplayX__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWorldToDisplayX__SWIG_1")]
  public static extern float GiTransform_getWorldToDisplayX__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWorldToDisplayY__SWIG_0")]
  public static extern float GiTransform_getWorldToDisplayY__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWorldToDisplayY__SWIG_1")]
  public static extern float GiTransform_getWorldToDisplayY__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_displayToModel__SWIG_0")]
  public static extern float GiTransform_displayToModel__SWIG_0(HandleRef jarg1, float jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_displayToModel__SWIG_1")]
  public static extern float GiTransform_displayToModel__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_modelToWorld")]
  public static extern IntPtr GiTransform_modelToWorld(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_worldToModel")]
  public static extern IntPtr GiTransform_worldToModel(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_displayToWorld")]
  public static extern IntPtr GiTransform_displayToWorld(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_worldToDisplay")]
  public static extern IntPtr GiTransform_worldToDisplay(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_displayToModel__SWIG_2")]
  public static extern IntPtr GiTransform_displayToModel__SWIG_2(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_modelToDisplay")]
  public static extern IntPtr GiTransform_modelToDisplay(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_setWndSize")]
  public static extern bool GiTransform_setWndSize(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_setResolution__SWIG_0")]
  public static extern void GiTransform_setResolution__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_setResolution__SWIG_1")]
  public static extern void GiTransform_setResolution__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_setModelTransform")]
  public static extern void GiTransform_setModelTransform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWndRectW")]
  public static extern IntPtr GiTransform_getWndRectW(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWndRectM")]
  public static extern IntPtr GiTransform_getWndRectM(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getMinViewScale")]
  public static extern float GiTransform_getMinViewScale(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getMaxViewScale")]
  public static extern float GiTransform_getMaxViewScale(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getWorldLimits")]
  public static extern IntPtr GiTransform_getWorldLimits(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_setViewScaleRange")]
  public static extern void GiTransform_setViewScaleRange(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_setWorldLimits")]
  public static extern IntPtr GiTransform_setWorldLimits(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomWnd__SWIG_0")]
  public static extern bool GiTransform_zoomWnd__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomWnd__SWIG_1")]
  public static extern bool GiTransform_zoomWnd__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomTo__SWIG_0")]
  public static extern bool GiTransform_zoomTo__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomTo__SWIG_1")]
  public static extern bool GiTransform_zoomTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomTo__SWIG_2")]
  public static extern bool GiTransform_zoomTo__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomTo__SWIG_3")]
  public static extern bool GiTransform_zoomTo__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomTo__SWIG_4")]
  public static extern bool GiTransform_zoomTo__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomTo__SWIG_5")]
  public static extern bool GiTransform_zoomTo__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomPan__SWIG_0")]
  public static extern bool GiTransform_zoomPan__SWIG_0(HandleRef jarg1, float jarg2, float jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomPan__SWIG_1")]
  public static extern bool GiTransform_zoomPan__SWIG_1(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomByFactor__SWIG_0")]
  public static extern bool GiTransform_zoomByFactor__SWIG_0(HandleRef jarg1, float jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomByFactor__SWIG_1")]
  public static extern bool GiTransform_zoomByFactor__SWIG_1(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomByFactor__SWIG_2")]
  public static extern bool GiTransform_zoomByFactor__SWIG_2(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomScale__SWIG_0")]
  public static extern bool GiTransform_zoomScale__SWIG_0(HandleRef jarg1, float jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomScale__SWIG_1")]
  public static extern bool GiTransform_zoomScale__SWIG_1(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoomScale__SWIG_2")]
  public static extern bool GiTransform_zoomScale__SWIG_2(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_zoom")]
  public static extern bool GiTransform_zoom(HandleRef jarg1, HandleRef jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_enableZoom")]
  public static extern bool GiTransform_enableZoom(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getZoomValue")]
  public static extern float GiTransform_getZoomValue(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiTransform_getZoomTimes")]
  public static extern int GiTransform_getZoomTimes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiSaveModelTransform")]
  public static extern IntPtr new_GiSaveModelTransform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiSaveModelTransform")]
  public static extern void delete_GiSaveModelTransform(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiPath__SWIG_0")]
  public static extern IntPtr new_GiPath__SWIG_0();

  [DllImport("touchvg", EntryPoint="CSharp_new_GiPath__SWIG_1")]
  public static extern IntPtr new_GiPath__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiPath__SWIG_2")]
  public static extern IntPtr new_GiPath__SWIG_2(int jarg1, HandleRef jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiPath")]
  public static extern void delete_GiPath(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_copy")]
  public static extern IntPtr GiPath_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_genericRoundLines__SWIG_0")]
  public static extern bool GiPath_genericRoundLines__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_genericRoundLines__SWIG_1")]
  public static extern bool GiPath_genericRoundLines__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_getCount")]
  public static extern int GiPath_getCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_getPoints")]
  public static extern IntPtr GiPath_getPoints(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_getTypes")]
  public static extern string GiPath_getTypes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_clear")]
  public static extern void GiPath_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_transform")]
  public static extern void GiPath_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_startFigure")]
  public static extern void GiPath_startFigure(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_moveTo")]
  public static extern bool GiPath_moveTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_lineTo")]
  public static extern bool GiPath_lineTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_linesTo")]
  public static extern bool GiPath_linesTo(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_beziersTo__SWIG_0")]
  public static extern bool GiPath_beziersTo__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_beziersTo__SWIG_1")]
  public static extern bool GiPath_beziersTo__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_arcTo__SWIG_0")]
  public static extern bool GiPath_arcTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_arcTo__SWIG_1")]
  public static extern bool GiPath_arcTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiPath_closeFigure")]
  public static extern bool GiPath_closeFigure(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiGraphics")]
  public static extern IntPtr new_GiGraphics(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiGraphics")]
  public static extern void delete_GiGraphics(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_copy")]
  public static extern void GiGraphics_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_xf")]
  public static extern IntPtr GiGraphics_xf(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_isDrawing")]
  public static extern bool GiGraphics_isDrawing(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_isPrint")]
  public static extern bool GiGraphics_isPrint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_getClipModel")]
  public static extern IntPtr GiGraphics_getClipModel(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_getClipWorld")]
  public static extern IntPtr GiGraphics_getClipWorld(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_getClipBox")]
  public static extern IntPtr GiGraphics_getClipBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_setClipBox")]
  public static extern bool GiGraphics_setClipBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_setClipWorld")]
  public static extern bool GiGraphics_setClipWorld(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_isGrayMode")]
  public static extern bool GiGraphics_isGrayMode(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_setGrayMode")]
  public static extern void GiGraphics_setGrayMode(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_getBkColor")]
  public static extern IntPtr GiGraphics_getBkColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_setBkColor")]
  public static extern IntPtr GiGraphics_setBkColor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_calcPenColor")]
  public static extern IntPtr GiGraphics_calcPenColor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_calcPenWidth")]
  public static extern float GiGraphics_calcPenWidth(HandleRef jarg1, float jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_setMaxPenWidth__SWIG_0")]
  public static extern void GiGraphics_setMaxPenWidth__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_setMaxPenWidth__SWIG_1")]
  public static extern void GiGraphics_setMaxPenWidth__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawLine__SWIG_0")]
  public static extern bool GiGraphics_drawLine__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawLine__SWIG_1")]
  public static extern bool GiGraphics_drawLine__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawLines__SWIG_0")]
  public static extern bool GiGraphics_drawLines__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawLines__SWIG_1")]
  public static extern bool GiGraphics_drawLines__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawBeziers__SWIG_0")]
  public static extern bool GiGraphics_drawBeziers__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5, bool jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawBeziers__SWIG_1")]
  public static extern bool GiGraphics_drawBeziers__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawBeziers__SWIG_2")]
  public static extern bool GiGraphics_drawBeziers__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawArc__SWIG_0")]
  public static extern bool GiGraphics_drawArc__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, float jarg6, float jarg7, bool jarg8);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawArc__SWIG_1")]
  public static extern bool GiGraphics_drawArc__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawArc3P__SWIG_0")]
  public static extern bool GiGraphics_drawArc3P__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawArc3P__SWIG_1")]
  public static extern bool GiGraphics_drawArc3P__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawPolygon__SWIG_0")]
  public static extern bool GiGraphics_drawPolygon__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawPolygon__SWIG_1")]
  public static extern bool GiGraphics_drawPolygon__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawEllipse__SWIG_0")]
  public static extern bool GiGraphics_drawEllipse__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, bool jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawEllipse__SWIG_1")]
  public static extern bool GiGraphics_drawEllipse__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawEllipse__SWIG_2")]
  public static extern bool GiGraphics_drawEllipse__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawEllipse__SWIG_3")]
  public static extern bool GiGraphics_drawEllipse__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawEllipse__SWIG_4")]
  public static extern bool GiGraphics_drawEllipse__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawPie__SWIG_0")]
  public static extern bool GiGraphics_drawPie__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, float jarg6, float jarg7, bool jarg8);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawPie__SWIG_1")]
  public static extern bool GiGraphics_drawPie__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawRect__SWIG_0")]
  public static extern bool GiGraphics_drawRect__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawRect__SWIG_1")]
  public static extern bool GiGraphics_drawRect__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawRoundRect__SWIG_0")]
  public static extern bool GiGraphics_drawRoundRect__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, bool jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawRoundRect__SWIG_1")]
  public static extern bool GiGraphics_drawRoundRect__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawRoundRect__SWIG_2")]
  public static extern bool GiGraphics_drawRoundRect__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawSplines__SWIG_0")]
  public static extern bool GiGraphics_drawSplines__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawSplines__SWIG_1")]
  public static extern bool GiGraphics_drawSplines__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawClosedSplines__SWIG_0")]
  public static extern bool GiGraphics_drawClosedSplines__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawClosedSplines__SWIG_1")]
  public static extern bool GiGraphics_drawClosedSplines__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawBSplines__SWIG_0")]
  public static extern bool GiGraphics_drawBSplines__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawBSplines__SWIG_1")]
  public static extern bool GiGraphics_drawBSplines__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawClosedBSplines__SWIG_0")]
  public static extern bool GiGraphics_drawClosedBSplines__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawClosedBSplines__SWIG_1")]
  public static extern bool GiGraphics_drawClosedBSplines__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawPath__SWIG_0")]
  public static extern bool GiGraphics_drawPath__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawPath__SWIG_1")]
  public static extern bool GiGraphics_drawPath__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawHandle__SWIG_0")]
  public static extern bool GiGraphics_drawHandle__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiGraphics_drawHandle__SWIG_1")]
  public static extern bool GiGraphics_drawHandle__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiSaveClipBox")]
  public static extern IntPtr new_GiSaveClipBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiSaveClipBox")]
  public static extern void delete_GiSaveClipBox(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiSaveClipBox_succeed")]
  public static extern bool GiSaveClipBox_succeed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Ints")]
  public static extern void delete_Ints(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Ints__SWIG_0")]
  public static extern IntPtr new_Ints__SWIG_0(int jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Ints__SWIG_1")]
  public static extern IntPtr new_Ints__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_Ints_setSize")]
  public static extern void Ints_setSize(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Ints_count")]
  public static extern int Ints_count(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Ints_get")]
  public static extern int Ints_get(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Ints_set__SWIG_0")]
  public static extern void Ints_set__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Ints_set__SWIG_1")]
  public static extern void Ints_set__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Floats")]
  public static extern void delete_Floats(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Floats__SWIG_0")]
  public static extern IntPtr new_Floats__SWIG_0(int jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Floats__SWIG_1")]
  public static extern IntPtr new_Floats__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_Floats_setSize")]
  public static extern void Floats_setSize(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Floats_count")]
  public static extern int Floats_count(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Floats_get")]
  public static extern float Floats_get(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Floats_set__SWIG_0")]
  public static extern void Floats_set__SWIG_0(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Floats_set__SWIG_1")]
  public static extern void Floats_set__SWIG_1(HandleRef jarg1, int jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Chars")]
  public static extern void delete_Chars(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Chars__SWIG_0")]
  public static extern IntPtr new_Chars__SWIG_0(int jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Chars__SWIG_1")]
  public static extern IntPtr new_Chars__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_Chars_setSize")]
  public static extern void Chars_setSize(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Chars_count")]
  public static extern int Chars_count(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Chars_get")]
  public static extern char Chars_get(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Chars_set__SWIG_0")]
  public static extern void Chars_set__SWIG_0(HandleRef jarg1, int jarg2, char jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Chars_set__SWIG_1")]
  public static extern void Chars_set__SWIG_1(HandleRef jarg1, int jarg2, char jarg3, char jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_delete_Shapes")]
  public static extern void delete_Shapes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Shapes__SWIG_0")]
  public static extern IntPtr new_Shapes__SWIG_0(int jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_Shapes__SWIG_1")]
  public static extern IntPtr new_Shapes__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_Shapes_setSize")]
  public static extern void Shapes_setSize(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Shapes_count")]
  public static extern int Shapes_count(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_Shapes_get")]
  public static extern IntPtr Shapes_get(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_Shapes_set__SWIG_0")]
  public static extern void Shapes_set__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_Shapes_set__SWIG_1")]
  public static extern void Shapes_set__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_readNode")]
  public static extern bool MgStorage_readNode(HandleRef jarg1, string jarg2, int jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_writeNode")]
  public static extern bool MgStorage_writeNode(HandleRef jarg1, string jarg2, int jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_readBool")]
  public static extern bool MgStorage_readBool(HandleRef jarg1, string jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_readFloat")]
  public static extern float MgStorage_readFloat(HandleRef jarg1, string jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_writeBool")]
  public static extern void MgStorage_writeBool(HandleRef jarg1, string jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_writeFloat")]
  public static extern void MgStorage_writeFloat(HandleRef jarg1, string jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_writeString")]
  public static extern void MgStorage_writeString(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_readInt")]
  public static extern int MgStorage_readInt(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_writeInt")]
  public static extern void MgStorage_writeInt(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_writeUInt")]
  public static extern void MgStorage_writeUInt(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorage_setError")]
  public static extern bool MgStorage_setError(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgStorage")]
  public static extern void delete_MgStorage(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgStorageBase")]
  public static extern IntPtr new_MgStorageBase();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgStorageBase")]
  public static extern void delete_MgStorageBase(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorageBase_readFloatArray")]
  public static extern int MgStorageBase_readFloatArray(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorageBase_writeFloatArray")]
  public static extern void MgStorageBase_writeFloatArray(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorageBase_readString")]
  public static extern int MgStorageBase_readString(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorageBase_director_connect")]
  public static extern void MgStorageBase_director_connect(HandleRef jarg1, MgStorageBase.SwigDelegateMgStorageBase_0 delegate0, MgStorageBase.SwigDelegateMgStorageBase_1 delegate1, MgStorageBase.SwigDelegateMgStorageBase_2 delegate2, MgStorageBase.SwigDelegateMgStorageBase_3 delegate3, MgStorageBase.SwigDelegateMgStorageBase_4 delegate4, MgStorageBase.SwigDelegateMgStorageBase_5 delegate5, MgStorageBase.SwigDelegateMgStorageBase_6 delegate6, MgStorageBase.SwigDelegateMgStorageBase_7 delegate7, MgStorageBase.SwigDelegateMgStorageBase_8 delegate8, MgStorageBase.SwigDelegateMgStorageBase_9 delegate9, MgStorageBase.SwigDelegateMgStorageBase_10 delegate10, MgStorageBase.SwigDelegateMgStorageBase_11 delegate11, MgStorageBase.SwigDelegateMgStorageBase_12 delegate12, MgStorageBase.SwigDelegateMgStorageBase_13 delegate13);

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_clone")]
  public static extern IntPtr MgObject_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_copy")]
  public static extern void MgObject_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_release")]
  public static extern void MgObject_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_equals")]
  public static extern bool MgObject_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_getType")]
  public static extern int MgObject_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_isKindOf")]
  public static extern bool MgObject_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgObject")]
  public static extern IntPtr new_MgObject();

  [DllImport("touchvg", EntryPoint="CSharp_MgObject_director_connect")]
  public static extern void MgObject_director_connect(HandleRef jarg1, MgObject.SwigDelegateMgObject_0 delegate0, MgObject.SwigDelegateMgObject_1 delegate1, MgObject.SwigDelegateMgObject_2 delegate2, MgObject.SwigDelegateMgObject_3 delegate3, MgObject.SwigDelegateMgObject_4 delegate4, MgObject.SwigDelegateMgObject_5 delegate5);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_Type")]
  public static extern int MgShape_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_cloneShape")]
  public static extern IntPtr MgShape_cloneShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_context")]
  public static extern IntPtr MgShape_context(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_contextc")]
  public static extern IntPtr MgShape_contextc(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_shape")]
  public static extern IntPtr MgShape_shape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_shapec")]
  public static extern IntPtr MgShape_shapec(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_hasFillColor")]
  public static extern bool MgShape_hasFillColor(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_draw")]
  public static extern bool MgShape_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_save")]
  public static extern bool MgShape_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_load")]
  public static extern bool MgShape_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_getID")]
  public static extern int MgShape_getID(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_getParent")]
  public static extern IntPtr MgShape_getParent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_setParent")]
  public static extern void MgShape_setParent(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_getTag")]
  public static extern int MgShape_getTag(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_setTag")]
  public static extern void MgShape_setTag(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_copy")]
  public static extern void MgShape_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_equals")]
  public static extern bool MgShape_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_isKindOf")]
  public static extern bool MgShape_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_nearpt_set")]
  public static extern void MgHitResult_nearpt_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_nearpt_get")]
  public static extern IntPtr MgHitResult_nearpt_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_segment_set")]
  public static extern void MgHitResult_segment_set(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_segment_get")]
  public static extern int MgHitResult_segment_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_inside_set")]
  public static extern void MgHitResult_inside_set(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_inside_get")]
  public static extern bool MgHitResult_inside_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_dist_set")]
  public static extern void MgHitResult_dist_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgHitResult_dist_get")]
  public static extern float MgHitResult_dist_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgHitResult")]
  public static extern IntPtr new_MgHitResult();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgHitResult")]
  public static extern void delete_MgHitResult(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgBaseShape")]
  public static extern IntPtr new_MgBaseShape();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgBaseShape")]
  public static extern void delete_MgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_Type")]
  public static extern int MgBaseShape_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_minTol")]
  public static extern IntPtr MgBaseShape_minTol();

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_cloneShape")]
  public static extern IntPtr MgBaseShape_cloneShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setOwner")]
  public static extern void MgBaseShape_setOwner(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setOwnerSwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_setOwnerSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getExtent")]
  public static extern IntPtr MgBaseShape_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getExtentSwigExplicitMgBaseShape")]
  public static extern IntPtr MgBaseShape_getExtentSwigExplicitMgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_update")]
  public static extern void MgBaseShape_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_updateSwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_updateSwigExplicitMgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_transform")]
  public static extern void MgBaseShape_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_transformSwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_transformSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_clear")]
  public static extern void MgBaseShape_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_clearSwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_clearSwigExplicitMgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_clearCachedData")]
  public static extern void MgBaseShape_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_clearCachedDataSwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_clearCachedDataSwigExplicitMgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getPointCount")]
  public static extern int MgBaseShape_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getPoint")]
  public static extern IntPtr MgBaseShape_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setPoint")]
  public static extern void MgBaseShape_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isClosed")]
  public static extern bool MgBaseShape_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isClosedSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_isClosedSwigExplicitMgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isCurve")]
  public static extern bool MgBaseShape_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_hitTest")]
  public static extern float MgBaseShape_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_hitTest2")]
  public static extern float MgBaseShape_hitTest2(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_hitTestBox")]
  public static extern bool MgBaseShape_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_hitTestBoxSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_hitTestBoxSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_draw")]
  public static extern bool MgBaseShape_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_drawSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_drawSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_save")]
  public static extern bool MgBaseShape_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_saveSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_saveSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_load")]
  public static extern bool MgBaseShape_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_loadSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_loadSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getHandleCount")]
  public static extern int MgBaseShape_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getHandleCountSwigExplicitMgBaseShape")]
  public static extern int MgBaseShape_getHandleCountSwigExplicitMgBaseShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getHandlePoint")]
  public static extern IntPtr MgBaseShape_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getHandlePointSwigExplicitMgBaseShape")]
  public static extern IntPtr MgBaseShape_getHandlePointSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setHandlePoint")]
  public static extern bool MgBaseShape_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setHandlePointSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_setHandlePointSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isHandleFixed")]
  public static extern bool MgBaseShape_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isHandleFixedSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_isHandleFixedSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getHandleType")]
  public static extern int MgBaseShape_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getHandleTypeSwigExplicitMgBaseShape")]
  public static extern int MgBaseShape_getHandleTypeSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_offset")]
  public static extern bool MgBaseShape_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_offsetSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_offsetSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getFlag")]
  public static extern bool MgBaseShape_getFlag(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setFlag")]
  public static extern void MgBaseShape_setFlag(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setFlagSwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_setFlagSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_getTypeName")]
  public static extern string MgBaseShape_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_copy")]
  public static extern void MgBaseShape_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_copySwigExplicitMgBaseShape")]
  public static extern void MgBaseShape_copySwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_equals")]
  public static extern bool MgBaseShape_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_equalsSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_equalsSwigExplicitMgBaseShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isKindOf")]
  public static extern bool MgBaseShape_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_isKindOfSwigExplicitMgBaseShape")]
  public static extern bool MgBaseShape_isKindOfSwigExplicitMgBaseShape(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_setExtent")]
  public static extern void MgBaseShape_setExtent(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_director_connect")]
  public static extern void MgBaseShape_director_connect(HandleRef jarg1, MgBaseShape.SwigDelegateMgBaseShape_0 delegate0, MgBaseShape.SwigDelegateMgBaseShape_1 delegate1, MgBaseShape.SwigDelegateMgBaseShape_2 delegate2, MgBaseShape.SwigDelegateMgBaseShape_3 delegate3, MgBaseShape.SwigDelegateMgBaseShape_4 delegate4, MgBaseShape.SwigDelegateMgBaseShape_5 delegate5, MgBaseShape.SwigDelegateMgBaseShape_6 delegate6, MgBaseShape.SwigDelegateMgBaseShape_7 delegate7, MgBaseShape.SwigDelegateMgBaseShape_8 delegate8, MgBaseShape.SwigDelegateMgBaseShape_9 delegate9, MgBaseShape.SwigDelegateMgBaseShape_10 delegate10, MgBaseShape.SwigDelegateMgBaseShape_11 delegate11, MgBaseShape.SwigDelegateMgBaseShape_12 delegate12, MgBaseShape.SwigDelegateMgBaseShape_13 delegate13, MgBaseShape.SwigDelegateMgBaseShape_14 delegate14, MgBaseShape.SwigDelegateMgBaseShape_15 delegate15, MgBaseShape.SwigDelegateMgBaseShape_16 delegate16, MgBaseShape.SwigDelegateMgBaseShape_17 delegate17, MgBaseShape.SwigDelegateMgBaseShape_18 delegate18, MgBaseShape.SwigDelegateMgBaseShape_19 delegate19, MgBaseShape.SwigDelegateMgBaseShape_20 delegate20, MgBaseShape.SwigDelegateMgBaseShape_21 delegate21, MgBaseShape.SwigDelegateMgBaseShape_22 delegate22, MgBaseShape.SwigDelegateMgBaseShape_23 delegate23, MgBaseShape.SwigDelegateMgBaseShape_24 delegate24, MgBaseShape.SwigDelegateMgBaseShape_25 delegate25, MgBaseShape.SwigDelegateMgBaseShape_26 delegate26, MgBaseShape.SwigDelegateMgBaseShape_27 delegate27, MgBaseShape.SwigDelegateMgBaseShape_28 delegate28, MgBaseShape.SwigDelegateMgBaseShape_29 delegate29);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeFactory_createShape")]
  public static extern IntPtr MgShapeFactory_createShape(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgShapeFactory")]
  public static extern void delete_MgShapeFactory(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_Type")]
  public static extern int MgShapes_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_cloneShapes")]
  public static extern IntPtr MgShapes_cloneShapes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_create__SWIG_0")]
  public static extern IntPtr MgShapes_create__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_create__SWIG_1")]
  public static extern IntPtr MgShapes_create__SWIG_1(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_create__SWIG_2")]
  public static extern IntPtr MgShapes_create__SWIG_2();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_addShapeByType")]
  public static extern IntPtr MgShapes_addShapeByType(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_getShapeCount")]
  public static extern int MgShapes_getShapeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_getHeadShape")]
  public static extern IntPtr MgShapes_getHeadShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_getLastShape")]
  public static extern IntPtr MgShapes_getLastShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_findShape")]
  public static extern IntPtr MgShapes_findShape(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_findShapeByTag")]
  public static extern IntPtr MgShapes_findShapeByTag(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_findShapeByType")]
  public static extern IntPtr MgShapes_findShapeByType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_getExtent")]
  public static extern IntPtr MgShapes_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_hitTest")]
  public static extern IntPtr MgShapes_hitTest(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_draw__SWIG_0")]
  public static extern int MgShapes_draw__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_draw__SWIG_1")]
  public static extern int MgShapes_draw__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_dyndraw")]
  public static extern int MgShapes_dyndraw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_save__SWIG_0")]
  public static extern bool MgShapes_save__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_save__SWIG_1")]
  public static extern bool MgShapes_save__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_load__SWIG_0")]
  public static extern bool MgShapes_load__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_load__SWIG_1")]
  public static extern bool MgShapes_load__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_clear")]
  public static extern void MgShapes_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_clearCachedData")]
  public static extern void MgShapes_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_copyShapes")]
  public static extern void MgShapes_copyShapes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_addShape")]
  public static extern IntPtr MgShapes_addShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_removeShape__SWIG_0")]
  public static extern IntPtr MgShapes_removeShape__SWIG_0(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_removeShape__SWIG_1")]
  public static extern IntPtr MgShapes_removeShape__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_moveTo")]
  public static extern IntPtr MgShapes_moveTo(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_moveAllShapesTo")]
  public static extern void MgShapes_moveAllShapesTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_bringToFront")]
  public static extern bool MgShapes_bringToFront(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_getOwner")]
  public static extern IntPtr MgShapes_getOwner(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_clone")]
  public static extern IntPtr MgShapes_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_copy")]
  public static extern void MgShapes_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_release")]
  public static extern void MgShapes_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_equals")]
  public static extern bool MgShapes_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_getType")]
  public static extern int MgShapes_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_isKindOf")]
  public static extern bool MgShapes_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgShapeIterator")]
  public static extern IntPtr new_MgShapeIterator(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgShapeIterator")]
  public static extern void delete_MgShapeIterator(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeIterator_getFirstShape")]
  public static extern IntPtr MgShapeIterator_getFirstShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeIterator_getNextShape")]
  public static extern IntPtr MgShapeIterator_getNextShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeIterator_freeIterator")]
  public static extern void MgShapeIterator_freeIterator(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgLine")]
  public static extern IntPtr new_MgLine();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgLine")]
  public static extern void delete_MgLine(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_create")]
  public static extern IntPtr MgLine_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_Type")]
  public static extern int MgLine_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getTypeName")]
  public static extern string MgLine_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_clone")]
  public static extern IntPtr MgLine_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_copy")]
  public static extern void MgLine_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_release")]
  public static extern void MgLine_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_equals")]
  public static extern bool MgLine_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getType")]
  public static extern int MgLine_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_isKindOf")]
  public static extern bool MgLine_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getExtent")]
  public static extern IntPtr MgLine_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_update")]
  public static extern void MgLine_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_transform")]
  public static extern void MgLine_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_clear")]
  public static extern void MgLine_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_clearCachedData")]
  public static extern void MgLine_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getPointCount")]
  public static extern int MgLine_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getPoint")]
  public static extern IntPtr MgLine_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_setPoint")]
  public static extern void MgLine_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_isClosed")]
  public static extern bool MgLine_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_hitTestBox")]
  public static extern bool MgLine_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_draw")]
  public static extern bool MgLine_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_save")]
  public static extern bool MgLine_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_load")]
  public static extern bool MgLine_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getHandleCount")]
  public static extern int MgLine_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getHandlePoint")]
  public static extern IntPtr MgLine_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_setHandlePoint")]
  public static extern bool MgLine_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_isHandleFixed")]
  public static extern bool MgLine_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_getHandleType")]
  public static extern int MgLine_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_offset")]
  public static extern bool MgLine_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_hitTest")]
  public static extern float MgLine_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_startPoint")]
  public static extern IntPtr MgLine_startPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_endPoint")]
  public static extern IntPtr MgLine_endPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_center")]
  public static extern IntPtr MgLine_center(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_length")]
  public static extern float MgLine_length(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_angle")]
  public static extern float MgLine_angle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_setStartPoint")]
  public static extern void MgLine_setStartPoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_setEndPoint")]
  public static extern void MgLine_setEndPoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_isCurve")]
  public static extern bool MgLine_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_Type")]
  public static extern int MgBaseRect_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_getCenter")]
  public static extern IntPtr MgBaseRect_getCenter(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_getRect")]
  public static extern IntPtr MgBaseRect_getRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_getWidth")]
  public static extern float MgBaseRect_getWidth(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_getHeight")]
  public static extern float MgBaseRect_getHeight(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_getAngle")]
  public static extern float MgBaseRect_getAngle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_isEmpty")]
  public static extern bool MgBaseRect_isEmpty(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_isOrtho")]
  public static extern bool MgBaseRect_isOrtho(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_setRect2P")]
  public static extern void MgBaseRect_setRect2P(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_setRectWithAngle")]
  public static extern void MgBaseRect_setRectWithAngle(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_setRect4P")]
  public static extern void MgBaseRect_setRect4P(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_setCenter")]
  public static extern void MgBaseRect_setCenter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_setSquare")]
  public static extern void MgBaseRect_setSquare(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_isCurve")]
  public static extern bool MgBaseRect_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_isCurveSwigExplicitMgBaseRect")]
  public static extern bool MgBaseRect_isCurveSwigExplicitMgBaseRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgBaseRect")]
  public static extern IntPtr new_MgBaseRect();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgBaseRect")]
  public static extern void delete_MgBaseRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_director_connect")]
  public static extern void MgBaseRect_director_connect(HandleRef jarg1, MgBaseRect.SwigDelegateMgBaseRect_0 delegate0, MgBaseRect.SwigDelegateMgBaseRect_1 delegate1, MgBaseRect.SwigDelegateMgBaseRect_2 delegate2, MgBaseRect.SwigDelegateMgBaseRect_3 delegate3, MgBaseRect.SwigDelegateMgBaseRect_4 delegate4, MgBaseRect.SwigDelegateMgBaseRect_5 delegate5, MgBaseRect.SwigDelegateMgBaseRect_6 delegate6, MgBaseRect.SwigDelegateMgBaseRect_7 delegate7, MgBaseRect.SwigDelegateMgBaseRect_8 delegate8, MgBaseRect.SwigDelegateMgBaseRect_9 delegate9, MgBaseRect.SwigDelegateMgBaseRect_10 delegate10, MgBaseRect.SwigDelegateMgBaseRect_11 delegate11, MgBaseRect.SwigDelegateMgBaseRect_12 delegate12, MgBaseRect.SwigDelegateMgBaseRect_13 delegate13, MgBaseRect.SwigDelegateMgBaseRect_14 delegate14, MgBaseRect.SwigDelegateMgBaseRect_15 delegate15, MgBaseRect.SwigDelegateMgBaseRect_16 delegate16, MgBaseRect.SwigDelegateMgBaseRect_17 delegate17, MgBaseRect.SwigDelegateMgBaseRect_18 delegate18, MgBaseRect.SwigDelegateMgBaseRect_19 delegate19, MgBaseRect.SwigDelegateMgBaseRect_20 delegate20, MgBaseRect.SwigDelegateMgBaseRect_21 delegate21, MgBaseRect.SwigDelegateMgBaseRect_22 delegate22, MgBaseRect.SwigDelegateMgBaseRect_23 delegate23, MgBaseRect.SwigDelegateMgBaseRect_24 delegate24, MgBaseRect.SwigDelegateMgBaseRect_25 delegate25, MgBaseRect.SwigDelegateMgBaseRect_26 delegate26, MgBaseRect.SwigDelegateMgBaseRect_27 delegate27, MgBaseRect.SwigDelegateMgBaseRect_28 delegate28, MgBaseRect.SwigDelegateMgBaseRect_29 delegate29);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgRect")]
  public static extern IntPtr new_MgRect();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgRect")]
  public static extern void delete_MgRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_create")]
  public static extern IntPtr MgRect_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_Type")]
  public static extern int MgRect_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getTypeName")]
  public static extern string MgRect_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_clone")]
  public static extern IntPtr MgRect_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_copy")]
  public static extern void MgRect_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_release")]
  public static extern void MgRect_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_equals")]
  public static extern bool MgRect_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getType")]
  public static extern int MgRect_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_isKindOf")]
  public static extern bool MgRect_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getExtent")]
  public static extern IntPtr MgRect_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_update")]
  public static extern void MgRect_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_transform")]
  public static extern void MgRect_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_clear")]
  public static extern void MgRect_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_clearCachedData")]
  public static extern void MgRect_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getPointCount")]
  public static extern int MgRect_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getPoint")]
  public static extern IntPtr MgRect_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_setPoint")]
  public static extern void MgRect_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_isClosed")]
  public static extern bool MgRect_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_hitTestBox")]
  public static extern bool MgRect_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_draw")]
  public static extern bool MgRect_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_save")]
  public static extern bool MgRect_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_load")]
  public static extern bool MgRect_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getHandleCount")]
  public static extern int MgRect_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getHandlePoint")]
  public static extern IntPtr MgRect_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_setHandlePoint")]
  public static extern bool MgRect_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_isHandleFixed")]
  public static extern bool MgRect_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_getHandleType")]
  public static extern int MgRect_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_offset")]
  public static extern bool MgRect_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_hitTest")]
  public static extern float MgRect_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgEllipse")]
  public static extern IntPtr new_MgEllipse();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgEllipse")]
  public static extern void delete_MgEllipse(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_create")]
  public static extern IntPtr MgEllipse_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_Type")]
  public static extern int MgEllipse_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getTypeName")]
  public static extern string MgEllipse_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_clone")]
  public static extern IntPtr MgEllipse_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_copy")]
  public static extern void MgEllipse_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_release")]
  public static extern void MgEllipse_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_equals")]
  public static extern bool MgEllipse_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getType")]
  public static extern int MgEllipse_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_isKindOf")]
  public static extern bool MgEllipse_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getExtent")]
  public static extern IntPtr MgEllipse_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_update")]
  public static extern void MgEllipse_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_transform")]
  public static extern void MgEllipse_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_clear")]
  public static extern void MgEllipse_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_clearCachedData")]
  public static extern void MgEllipse_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getPointCount")]
  public static extern int MgEllipse_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getPoint")]
  public static extern IntPtr MgEllipse_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_setPoint")]
  public static extern void MgEllipse_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_isClosed")]
  public static extern bool MgEllipse_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_hitTestBox")]
  public static extern bool MgEllipse_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_draw")]
  public static extern bool MgEllipse_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_save")]
  public static extern bool MgEllipse_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_load")]
  public static extern bool MgEllipse_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getHandleCount")]
  public static extern int MgEllipse_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getHandlePoint")]
  public static extern IntPtr MgEllipse_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_setHandlePoint")]
  public static extern bool MgEllipse_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_isHandleFixed")]
  public static extern bool MgEllipse_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getHandleType")]
  public static extern int MgEllipse_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_offset")]
  public static extern bool MgEllipse_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_hitTest")]
  public static extern float MgEllipse_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getRadiusX")]
  public static extern float MgEllipse_getRadiusX(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_getRadiusY")]
  public static extern float MgEllipse_getRadiusY(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_setRadius__SWIG_0")]
  public static extern void MgEllipse_setRadius__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_setRadius__SWIG_1")]
  public static extern void MgEllipse_setRadius__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_isCurve")]
  public static extern bool MgEllipse_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgRoundRect")]
  public static extern IntPtr new_MgRoundRect();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgRoundRect")]
  public static extern void delete_MgRoundRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_create")]
  public static extern IntPtr MgRoundRect_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_Type")]
  public static extern int MgRoundRect_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getTypeName")]
  public static extern string MgRoundRect_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_clone")]
  public static extern IntPtr MgRoundRect_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_copy")]
  public static extern void MgRoundRect_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_release")]
  public static extern void MgRoundRect_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_equals")]
  public static extern bool MgRoundRect_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getType")]
  public static extern int MgRoundRect_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_isKindOf")]
  public static extern bool MgRoundRect_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getExtent")]
  public static extern IntPtr MgRoundRect_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_update")]
  public static extern void MgRoundRect_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_transform")]
  public static extern void MgRoundRect_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_clear")]
  public static extern void MgRoundRect_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_clearCachedData")]
  public static extern void MgRoundRect_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getPointCount")]
  public static extern int MgRoundRect_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getPoint")]
  public static extern IntPtr MgRoundRect_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_setPoint")]
  public static extern void MgRoundRect_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_isClosed")]
  public static extern bool MgRoundRect_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_hitTestBox")]
  public static extern bool MgRoundRect_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_draw")]
  public static extern bool MgRoundRect_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_save")]
  public static extern bool MgRoundRect_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_load")]
  public static extern bool MgRoundRect_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getHandleCount")]
  public static extern int MgRoundRect_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getHandlePoint")]
  public static extern IntPtr MgRoundRect_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_setHandlePoint")]
  public static extern bool MgRoundRect_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_isHandleFixed")]
  public static extern bool MgRoundRect_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getHandleType")]
  public static extern int MgRoundRect_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_offset")]
  public static extern bool MgRoundRect_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_hitTest")]
  public static extern float MgRoundRect_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getRadiusX")]
  public static extern float MgRoundRect_getRadiusX(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_getRadiusY")]
  public static extern float MgRoundRect_getRadiusY(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_setRadius__SWIG_0")]
  public static extern void MgRoundRect_setRadius__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_setRadius__SWIG_1")]
  public static extern void MgRoundRect_setRadius__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_isCurve")]
  public static extern bool MgRoundRect_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgDiamond")]
  public static extern IntPtr new_MgDiamond();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgDiamond")]
  public static extern void delete_MgDiamond(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_create")]
  public static extern IntPtr MgDiamond_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_Type")]
  public static extern int MgDiamond_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getTypeName")]
  public static extern string MgDiamond_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_clone")]
  public static extern IntPtr MgDiamond_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_copy")]
  public static extern void MgDiamond_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_release")]
  public static extern void MgDiamond_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_equals")]
  public static extern bool MgDiamond_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getType")]
  public static extern int MgDiamond_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_isKindOf")]
  public static extern bool MgDiamond_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getExtent")]
  public static extern IntPtr MgDiamond_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_update")]
  public static extern void MgDiamond_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_transform")]
  public static extern void MgDiamond_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_clear")]
  public static extern void MgDiamond_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_clearCachedData")]
  public static extern void MgDiamond_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getPointCount")]
  public static extern int MgDiamond_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getPoint")]
  public static extern IntPtr MgDiamond_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_setPoint")]
  public static extern void MgDiamond_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_isClosed")]
  public static extern bool MgDiamond_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_hitTestBox")]
  public static extern bool MgDiamond_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_draw")]
  public static extern bool MgDiamond_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_save")]
  public static extern bool MgDiamond_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_load")]
  public static extern bool MgDiamond_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getHandleCount")]
  public static extern int MgDiamond_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getHandlePoint")]
  public static extern IntPtr MgDiamond_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_setHandlePoint")]
  public static extern bool MgDiamond_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_isHandleFixed")]
  public static extern bool MgDiamond_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_getHandleType")]
  public static extern int MgDiamond_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_offset")]
  public static extern bool MgDiamond_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_hitTest")]
  public static extern float MgDiamond_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_Type")]
  public static extern int MgBaseLines_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_setClosed")]
  public static extern void MgBaseLines_setClosed(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_endPoint")]
  public static extern IntPtr MgBaseLines_endPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_resize")]
  public static extern bool MgBaseLines_resize(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_addPoint")]
  public static extern bool MgBaseLines_addPoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_insertPoint")]
  public static extern bool MgBaseLines_insertPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_removePoint")]
  public static extern bool MgBaseLines_removePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_maxEdgeIndex")]
  public static extern int MgBaseLines_maxEdgeIndex(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgBaseLines")]
  public static extern IntPtr new_MgBaseLines();

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_director_connect")]
  public static extern void MgBaseLines_director_connect(HandleRef jarg1, MgBaseLines.SwigDelegateMgBaseLines_0 delegate0, MgBaseLines.SwigDelegateMgBaseLines_1 delegate1, MgBaseLines.SwigDelegateMgBaseLines_2 delegate2, MgBaseLines.SwigDelegateMgBaseLines_3 delegate3, MgBaseLines.SwigDelegateMgBaseLines_4 delegate4, MgBaseLines.SwigDelegateMgBaseLines_5 delegate5, MgBaseLines.SwigDelegateMgBaseLines_6 delegate6, MgBaseLines.SwigDelegateMgBaseLines_7 delegate7, MgBaseLines.SwigDelegateMgBaseLines_8 delegate8, MgBaseLines.SwigDelegateMgBaseLines_9 delegate9, MgBaseLines.SwigDelegateMgBaseLines_10 delegate10, MgBaseLines.SwigDelegateMgBaseLines_11 delegate11, MgBaseLines.SwigDelegateMgBaseLines_12 delegate12, MgBaseLines.SwigDelegateMgBaseLines_13 delegate13, MgBaseLines.SwigDelegateMgBaseLines_14 delegate14, MgBaseLines.SwigDelegateMgBaseLines_15 delegate15, MgBaseLines.SwigDelegateMgBaseLines_16 delegate16, MgBaseLines.SwigDelegateMgBaseLines_17 delegate17, MgBaseLines.SwigDelegateMgBaseLines_18 delegate18, MgBaseLines.SwigDelegateMgBaseLines_19 delegate19, MgBaseLines.SwigDelegateMgBaseLines_20 delegate20, MgBaseLines.SwigDelegateMgBaseLines_21 delegate21, MgBaseLines.SwigDelegateMgBaseLines_22 delegate22, MgBaseLines.SwigDelegateMgBaseLines_23 delegate23, MgBaseLines.SwigDelegateMgBaseLines_24 delegate24, MgBaseLines.SwigDelegateMgBaseLines_25 delegate25, MgBaseLines.SwigDelegateMgBaseLines_26 delegate26, MgBaseLines.SwigDelegateMgBaseLines_27 delegate27, MgBaseLines.SwigDelegateMgBaseLines_28 delegate28, MgBaseLines.SwigDelegateMgBaseLines_29 delegate29);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgLines")]
  public static extern IntPtr new_MgLines();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgLines")]
  public static extern void delete_MgLines(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_create")]
  public static extern IntPtr MgLines_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_Type")]
  public static extern int MgLines_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getTypeName")]
  public static extern string MgLines_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_clone")]
  public static extern IntPtr MgLines_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_copy")]
  public static extern void MgLines_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_release")]
  public static extern void MgLines_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_equals")]
  public static extern bool MgLines_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getType")]
  public static extern int MgLines_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_isKindOf")]
  public static extern bool MgLines_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getExtent")]
  public static extern IntPtr MgLines_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_update")]
  public static extern void MgLines_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_transform")]
  public static extern void MgLines_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_clear")]
  public static extern void MgLines_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_clearCachedData")]
  public static extern void MgLines_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getPointCount")]
  public static extern int MgLines_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getPoint")]
  public static extern IntPtr MgLines_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_setPoint")]
  public static extern void MgLines_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_isClosed")]
  public static extern bool MgLines_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_hitTestBox")]
  public static extern bool MgLines_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_draw")]
  public static extern bool MgLines_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_save")]
  public static extern bool MgLines_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_load")]
  public static extern bool MgLines_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getHandleCount")]
  public static extern int MgLines_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getHandlePoint")]
  public static extern IntPtr MgLines_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_setHandlePoint")]
  public static extern bool MgLines_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_isHandleFixed")]
  public static extern bool MgLines_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_getHandleType")]
  public static extern int MgLines_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_offset")]
  public static extern bool MgLines_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_hitTest")]
  public static extern float MgLines_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_isCurve")]
  public static extern bool MgLines_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgSplines")]
  public static extern IntPtr new_MgSplines();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgSplines")]
  public static extern void delete_MgSplines(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_create")]
  public static extern IntPtr MgSplines_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_Type")]
  public static extern int MgSplines_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getTypeName")]
  public static extern string MgSplines_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_clone")]
  public static extern IntPtr MgSplines_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_copy")]
  public static extern void MgSplines_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_release")]
  public static extern void MgSplines_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_equals")]
  public static extern bool MgSplines_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getType")]
  public static extern int MgSplines_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_isKindOf")]
  public static extern bool MgSplines_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getExtent")]
  public static extern IntPtr MgSplines_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_update")]
  public static extern void MgSplines_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_transform")]
  public static extern void MgSplines_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_clear")]
  public static extern void MgSplines_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_clearCachedData")]
  public static extern void MgSplines_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getPointCount")]
  public static extern int MgSplines_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getPoint")]
  public static extern IntPtr MgSplines_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_setPoint")]
  public static extern void MgSplines_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_isClosed")]
  public static extern bool MgSplines_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_hitTestBox")]
  public static extern bool MgSplines_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_draw")]
  public static extern bool MgSplines_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_save")]
  public static extern bool MgSplines_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_load")]
  public static extern bool MgSplines_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getHandleCount")]
  public static extern int MgSplines_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getHandlePoint")]
  public static extern IntPtr MgSplines_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_setHandlePoint")]
  public static extern bool MgSplines_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_isHandleFixed")]
  public static extern bool MgSplines_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_getHandleType")]
  public static extern int MgSplines_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_offset")]
  public static extern bool MgSplines_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_hitTest")]
  public static extern float MgSplines_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_smooth")]
  public static extern void MgSplines_smooth(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_isCurve")]
  public static extern bool MgSplines_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgParallel")]
  public static extern IntPtr new_MgParallel();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgParallel")]
  public static extern void delete_MgParallel(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_create")]
  public static extern IntPtr MgParallel_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_Type")]
  public static extern int MgParallel_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getTypeName")]
  public static extern string MgParallel_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_clone")]
  public static extern IntPtr MgParallel_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_copy")]
  public static extern void MgParallel_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_release")]
  public static extern void MgParallel_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_equals")]
  public static extern bool MgParallel_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getType")]
  public static extern int MgParallel_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_isKindOf")]
  public static extern bool MgParallel_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getExtent")]
  public static extern IntPtr MgParallel_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_update")]
  public static extern void MgParallel_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_transform")]
  public static extern void MgParallel_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_clear")]
  public static extern void MgParallel_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_clearCachedData")]
  public static extern void MgParallel_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getPointCount")]
  public static extern int MgParallel_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getPoint")]
  public static extern IntPtr MgParallel_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_setPoint")]
  public static extern void MgParallel_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_isClosed")]
  public static extern bool MgParallel_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_hitTestBox")]
  public static extern bool MgParallel_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_draw")]
  public static extern bool MgParallel_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_save")]
  public static extern bool MgParallel_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_load")]
  public static extern bool MgParallel_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getHandleCount")]
  public static extern int MgParallel_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getHandlePoint")]
  public static extern IntPtr MgParallel_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_setHandlePoint")]
  public static extern bool MgParallel_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_isHandleFixed")]
  public static extern bool MgParallel_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getHandleType")]
  public static extern int MgParallel_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_offset")]
  public static extern bool MgParallel_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_hitTest")]
  public static extern float MgParallel_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getCenter")]
  public static extern IntPtr MgParallel_getCenter(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getRect")]
  public static extern IntPtr MgParallel_getRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getWidth")]
  public static extern float MgParallel_getWidth(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_getHeight")]
  public static extern float MgParallel_getHeight(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_angle")]
  public static extern float MgParallel_angle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_isEmpty")]
  public static extern bool MgParallel_isEmpty(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_isCurve")]
  public static extern bool MgParallel_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgImageShape")]
  public static extern IntPtr new_MgImageShape();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgImageShape")]
  public static extern void delete_MgImageShape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_create")]
  public static extern IntPtr MgImageShape_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_Type")]
  public static extern int MgImageShape_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getTypeName")]
  public static extern string MgImageShape_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_clone")]
  public static extern IntPtr MgImageShape_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_copy")]
  public static extern void MgImageShape_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_release")]
  public static extern void MgImageShape_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_equals")]
  public static extern bool MgImageShape_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getType")]
  public static extern int MgImageShape_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_isKindOf")]
  public static extern bool MgImageShape_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getExtent")]
  public static extern IntPtr MgImageShape_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_update")]
  public static extern void MgImageShape_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_transform")]
  public static extern void MgImageShape_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_clear")]
  public static extern void MgImageShape_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_clearCachedData")]
  public static extern void MgImageShape_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getPointCount")]
  public static extern int MgImageShape_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getPoint")]
  public static extern IntPtr MgImageShape_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_setPoint")]
  public static extern void MgImageShape_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_isClosed")]
  public static extern bool MgImageShape_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_hitTestBox")]
  public static extern bool MgImageShape_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_draw")]
  public static extern bool MgImageShape_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_save")]
  public static extern bool MgImageShape_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_load")]
  public static extern bool MgImageShape_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getHandleCount")]
  public static extern int MgImageShape_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getHandlePoint")]
  public static extern IntPtr MgImageShape_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_setHandlePoint")]
  public static extern bool MgImageShape_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_isHandleFixed")]
  public static extern bool MgImageShape_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getHandleType")]
  public static extern int MgImageShape_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_offset")]
  public static extern bool MgImageShape_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_hitTest")]
  public static extern float MgImageShape_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_getName")]
  public static extern string MgImageShape_getName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_setName")]
  public static extern void MgImageShape_setName(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_findShapeByImageID")]
  public static extern IntPtr MgImageShape_findShapeByImageID(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgArc")]
  public static extern IntPtr new_MgArc();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgArc")]
  public static extern void delete_MgArc(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_create")]
  public static extern IntPtr MgArc_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_Type")]
  public static extern int MgArc_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getTypeName")]
  public static extern string MgArc_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_clone")]
  public static extern IntPtr MgArc_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_copy")]
  public static extern void MgArc_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_release")]
  public static extern void MgArc_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_equals")]
  public static extern bool MgArc_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getType")]
  public static extern int MgArc_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_isKindOf")]
  public static extern bool MgArc_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getExtent")]
  public static extern IntPtr MgArc_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_update")]
  public static extern void MgArc_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_transform")]
  public static extern void MgArc_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_clear")]
  public static extern void MgArc_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_clearCachedData")]
  public static extern void MgArc_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getPointCount")]
  public static extern int MgArc_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getPoint")]
  public static extern IntPtr MgArc_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setPoint")]
  public static extern void MgArc_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_isClosed")]
  public static extern bool MgArc_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_hitTestBox")]
  public static extern bool MgArc_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_draw")]
  public static extern bool MgArc_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_save")]
  public static extern bool MgArc_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_load")]
  public static extern bool MgArc_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getHandleCount")]
  public static extern int MgArc_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getHandlePoint")]
  public static extern IntPtr MgArc_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setHandlePoint")]
  public static extern bool MgArc_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_isHandleFixed")]
  public static extern bool MgArc_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getHandleType")]
  public static extern int MgArc_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_offset")]
  public static extern bool MgArc_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_hitTest")]
  public static extern float MgArc_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getCenter")]
  public static extern IntPtr MgArc_getCenter(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getStartPoint")]
  public static extern IntPtr MgArc_getStartPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getEndPoint")]
  public static extern IntPtr MgArc_getEndPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getMidPoint")]
  public static extern IntPtr MgArc_getMidPoint(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getRadius")]
  public static extern float MgArc_getRadius(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getStartAngle")]
  public static extern float MgArc_getStartAngle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getEndAngle")]
  public static extern float MgArc_getEndAngle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getSweepAngle")]
  public static extern float MgArc_getSweepAngle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getStartTangent")]
  public static extern IntPtr MgArc_getStartTangent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_getEndTangent")]
  public static extern IntPtr MgArc_getEndTangent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setStartMidEnd")]
  public static extern bool MgArc_setStartMidEnd(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setCenterStartEnd__SWIG_0")]
  public static extern bool MgArc_setCenterStartEnd__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setCenterStartEnd__SWIG_1")]
  public static extern bool MgArc_setCenterStartEnd__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setTanStartEnd")]
  public static extern bool MgArc_setTanStartEnd(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_setCenterRadius")]
  public static extern bool MgArc_setCenterRadius(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_isCurve")]
  public static extern bool MgArc_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_Type")]
  public static extern int MgComposite_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_getShapeCount")]
  public static extern int MgComposite_getShapeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_shapes")]
  public static extern IntPtr MgComposite_shapes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_canOffsetShapeAlone")]
  public static extern bool MgComposite_canOffsetShapeAlone(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_canOffsetShapeAloneSwigExplicitMgComposite")]
  public static extern bool MgComposite_canOffsetShapeAloneSwigExplicitMgComposite(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_isCurve")]
  public static extern bool MgComposite_isCurve(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_isCurveSwigExplicitMgComposite")]
  public static extern bool MgComposite_isCurveSwigExplicitMgComposite(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgComposite")]
  public static extern IntPtr new_MgComposite();

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_director_connect")]
  public static extern void MgComposite_director_connect(HandleRef jarg1, MgComposite.SwigDelegateMgComposite_0 delegate0, MgComposite.SwigDelegateMgComposite_1 delegate1, MgComposite.SwigDelegateMgComposite_2 delegate2, MgComposite.SwigDelegateMgComposite_3 delegate3, MgComposite.SwigDelegateMgComposite_4 delegate4, MgComposite.SwigDelegateMgComposite_5 delegate5, MgComposite.SwigDelegateMgComposite_6 delegate6, MgComposite.SwigDelegateMgComposite_7 delegate7, MgComposite.SwigDelegateMgComposite_8 delegate8, MgComposite.SwigDelegateMgComposite_9 delegate9, MgComposite.SwigDelegateMgComposite_10 delegate10, MgComposite.SwigDelegateMgComposite_11 delegate11, MgComposite.SwigDelegateMgComposite_12 delegate12, MgComposite.SwigDelegateMgComposite_13 delegate13, MgComposite.SwigDelegateMgComposite_14 delegate14, MgComposite.SwigDelegateMgComposite_15 delegate15, MgComposite.SwigDelegateMgComposite_16 delegate16, MgComposite.SwigDelegateMgComposite_17 delegate17, MgComposite.SwigDelegateMgComposite_18 delegate18, MgComposite.SwigDelegateMgComposite_19 delegate19, MgComposite.SwigDelegateMgComposite_20 delegate20, MgComposite.SwigDelegateMgComposite_21 delegate21, MgComposite.SwigDelegateMgComposite_22 delegate22, MgComposite.SwigDelegateMgComposite_23 delegate23, MgComposite.SwigDelegateMgComposite_24 delegate24, MgComposite.SwigDelegateMgComposite_25 delegate25, MgComposite.SwigDelegateMgComposite_26 delegate26, MgComposite.SwigDelegateMgComposite_27 delegate27, MgComposite.SwigDelegateMgComposite_28 delegate28, MgComposite.SwigDelegateMgComposite_29 delegate29, MgComposite.SwigDelegateMgComposite_30 delegate30);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgGroup")]
  public static extern IntPtr new_MgGroup();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgGroup")]
  public static extern void delete_MgGroup(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_create")]
  public static extern IntPtr MgGroup_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_Type")]
  public static extern int MgGroup_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getTypeName")]
  public static extern string MgGroup_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_clone")]
  public static extern IntPtr MgGroup_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_copy")]
  public static extern void MgGroup_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_release")]
  public static extern void MgGroup_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_equals")]
  public static extern bool MgGroup_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getType")]
  public static extern int MgGroup_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_isKindOf")]
  public static extern bool MgGroup_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getExtent")]
  public static extern IntPtr MgGroup_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_update")]
  public static extern void MgGroup_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_transform")]
  public static extern void MgGroup_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_clear")]
  public static extern void MgGroup_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_clearCachedData")]
  public static extern void MgGroup_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getPointCount")]
  public static extern int MgGroup_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getPoint")]
  public static extern IntPtr MgGroup_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_setPoint")]
  public static extern void MgGroup_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_isClosed")]
  public static extern bool MgGroup_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_hitTestBox")]
  public static extern bool MgGroup_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_draw")]
  public static extern bool MgGroup_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_save")]
  public static extern bool MgGroup_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_load")]
  public static extern bool MgGroup_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getHandleCount")]
  public static extern int MgGroup_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getHandlePoint")]
  public static extern IntPtr MgGroup_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_setHandlePoint")]
  public static extern bool MgGroup_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_isHandleFixed")]
  public static extern bool MgGroup_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_getHandleType")]
  public static extern int MgGroup_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_offset")]
  public static extern bool MgGroup_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_hitTest")]
  public static extern float MgGroup_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_addShape")]
  public static extern bool MgGroup_addShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgGrid")]
  public static extern IntPtr new_MgGrid();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgGrid")]
  public static extern void delete_MgGrid(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_create")]
  public static extern IntPtr MgGrid_create();

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_Type")]
  public static extern int MgGrid_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getTypeName")]
  public static extern string MgGrid_getTypeName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_clone")]
  public static extern IntPtr MgGrid_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_copy")]
  public static extern void MgGrid_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_release")]
  public static extern void MgGrid_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_equals")]
  public static extern bool MgGrid_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getType")]
  public static extern int MgGrid_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_isKindOf")]
  public static extern bool MgGrid_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getExtent")]
  public static extern IntPtr MgGrid_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_update")]
  public static extern void MgGrid_update(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_transform")]
  public static extern void MgGrid_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_clear")]
  public static extern void MgGrid_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_clearCachedData")]
  public static extern void MgGrid_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getPointCount")]
  public static extern int MgGrid_getPointCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getPoint")]
  public static extern IntPtr MgGrid_getPoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_setPoint")]
  public static extern void MgGrid_setPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_isClosed")]
  public static extern bool MgGrid_isClosed(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_hitTestBox")]
  public static extern bool MgGrid_hitTestBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_draw")]
  public static extern bool MgGrid_draw(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_save")]
  public static extern bool MgGrid_save(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_load")]
  public static extern bool MgGrid_load(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getHandleCount")]
  public static extern int MgGrid_getHandleCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getHandlePoint")]
  public static extern IntPtr MgGrid_getHandlePoint(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_setHandlePoint")]
  public static extern bool MgGrid_setHandlePoint(HandleRef jarg1, int jarg2, HandleRef jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_isHandleFixed")]
  public static extern bool MgGrid_isHandleFixed(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_getHandleType")]
  public static extern int MgGrid_getHandleType(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_offset")]
  public static extern bool MgGrid_offset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_hitTest")]
  public static extern float MgGrid_hitTest(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_snap")]
  public static extern int MgGrid_snap(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_valid")]
  public static extern bool MgGrid_valid(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgActionDispatcher_showInSelect")]
  public static extern bool MgActionDispatcher_showInSelect(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgActionDispatcher_showInDrawing")]
  public static extern bool MgActionDispatcher_showInDrawing(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgActionDispatcher_doAction")]
  public static extern bool MgActionDispatcher_doAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgActionDispatcher")]
  public static extern void delete_MgActionDispatcher(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_lockData")]
  public static extern bool MgLockData_lockData(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_unlockData")]
  public static extern int MgLockData_unlockData(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_afterChanged")]
  public static extern void MgLockData_afterChanged(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_lockedForRead")]
  public static extern bool MgLockData_lockedForRead(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_lockedForWrite")]
  public static extern bool MgLockData_lockedForWrite(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_getEditFlags")]
  public static extern int MgLockData_getEditFlags(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_resetEditFlags")]
  public static extern void MgLockData_resetEditFlags(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_lockDynData")]
  public static extern bool MgLockData_lockDynData(HandleRef jarg1, bool jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_unlockDynData")]
  public static extern int MgLockData_unlockDynData(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_lockedForReadDyn")]
  public static extern bool MgLockData_lockedForReadDyn(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLockData_lockedForWriteDyn")]
  public static extern bool MgLockData_lockedForWriteDyn(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgLockData")]
  public static extern void delete_MgLockData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSnap_clearSnap")]
  public static extern void MgSnap_clearSnap(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSnap_drawSnap")]
  public static extern bool MgSnap_drawSnap(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSnap_getSnappedType")]
  public static extern int MgSnap_getSnappedType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSnap_getSnappedPoint")]
  public static extern int MgSnap_getSnappedPoint(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSnap_snapPoint")]
  public static extern IntPtr MgSnap_snapPoint(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgSnap")]
  public static extern void delete_MgSnap(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_getSelection__SWIG_0")]
  public static extern int MgSelection_getSelection__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_getSelection__SWIG_1")]
  public static extern int MgSelection_getSelection__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_getSelectionCount")]
  public static extern int MgSelection_getSelectionCount(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_getSelectState")]
  public static extern int MgSelection_getSelectState(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_getSelectType")]
  public static extern int MgSelection_getSelectType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_selectAll")]
  public static extern bool MgSelection_selectAll(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_deleteSelection")]
  public static extern bool MgSelection_deleteSelection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_cloneSelection")]
  public static extern bool MgSelection_cloneSelection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_groupSelection")]
  public static extern bool MgSelection_groupSelection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_ungroupSelection")]
  public static extern bool MgSelection_ungroupSelection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_resetSelection")]
  public static extern void MgSelection_resetSelection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_addSelection")]
  public static extern bool MgSelection_addSelection(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_deleteVertext")]
  public static extern bool MgSelection_deleteVertext(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_insertVertext")]
  public static extern bool MgSelection_insertVertext(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_switchClosed")]
  public static extern bool MgSelection_switchClosed(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_isFixedLength")]
  public static extern bool MgSelection_isFixedLength(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_setFixedLength")]
  public static extern bool MgSelection_setFixedLength(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_isLocked")]
  public static extern bool MgSelection_isLocked(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_setLocked")]
  public static extern bool MgSelection_setLocked(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_isEditMode")]
  public static extern bool MgSelection_isEditMode(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_setEditMode")]
  public static extern bool MgSelection_setEditMode(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_overturnPolygon")]
  public static extern bool MgSelection_overturnPolygon(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_getBoundingBox")]
  public static extern IntPtr MgSelection_getBoundingBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgSelection_isSelectedByType")]
  public static extern bool MgSelection_isSelectedByType(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgSelection")]
  public static extern void delete_MgSelection(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgView")]
  public static extern void delete_MgView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_cmds")]
  public static extern IntPtr MgView_cmds(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_xform")]
  public static extern IntPtr MgView_xform(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_graph")]
  public static extern IntPtr MgView_graph(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_doc")]
  public static extern IntPtr MgView_doc(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapes")]
  public static extern IntPtr MgView_shapes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_context")]
  public static extern IntPtr MgView_context(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_modelTransform")]
  public static extern IntPtr MgView_modelTransform(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getShapeFactory")]
  public static extern IntPtr MgView_getShapeFactory(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getSnap")]
  public static extern IntPtr MgView_getSnap(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getAction")]
  public static extern IntPtr MgView_getAction(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getLockData")]
  public static extern IntPtr MgView_getLockData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getCmdSubject")]
  public static extern IntPtr MgView_getCmdSubject(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getSelection")]
  public static extern IntPtr MgView_getSelection(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_setCurrentShapes")]
  public static extern bool MgView_setCurrentShapes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_toSelectCommand")]
  public static extern bool MgView_toSelectCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getNewShapeID")]
  public static extern int MgView_getNewShapeID(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_setNewShapeID")]
  public static extern void MgView_setNewShapeID(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getCommandName")]
  public static extern string MgView_getCommandName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_getCommand")]
  public static extern IntPtr MgView_getCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_findCommand")]
  public static extern IntPtr MgView_findCommand(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_setCommand")]
  public static extern bool MgView_setCommand(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_regenAll")]
  public static extern void MgView_regenAll(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_regenAppend")]
  public static extern void MgView_regenAppend(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_redraw")]
  public static extern void MgView_redraw(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_useFinger")]
  public static extern bool MgView_useFinger(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_commandChanged")]
  public static extern void MgView_commandChanged(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_selectionChanged")]
  public static extern void MgView_selectionChanged(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeWillAdded")]
  public static extern bool MgView_shapeWillAdded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeAdded")]
  public static extern void MgView_shapeAdded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeWillDeleted")]
  public static extern bool MgView_shapeWillDeleted(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_removeShape")]
  public static extern bool MgView_removeShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeCanRotated")]
  public static extern bool MgView_shapeCanRotated(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeCanTransform")]
  public static extern bool MgView_shapeCanTransform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeCanUnlock")]
  public static extern bool MgView_shapeCanUnlock(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeCanUngroup")]
  public static extern bool MgView_shapeCanUngroup(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_shapeMoved")]
  public static extern void MgView_shapeMoved(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgView_isContextActionsVisible")]
  public static extern bool MgView_isContextActionsVisible(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_view_set")]
  public static extern void MgMotion_view_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_view_get")]
  public static extern IntPtr MgMotion_view_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_gestureType_set")]
  public static extern void MgMotion_gestureType_set(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_gestureType_get")]
  public static extern int MgMotion_gestureType_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_gestureState_set")]
  public static extern void MgMotion_gestureState_set(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_gestureState_get")]
  public static extern int MgMotion_gestureState_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_pressDrag_set")]
  public static extern void MgMotion_pressDrag_set(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_pressDrag_get")]
  public static extern bool MgMotion_pressDrag_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_switchGesture_set")]
  public static extern void MgMotion_switchGesture_set(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_switchGesture_get")]
  public static extern bool MgMotion_switchGesture_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPt_set")]
  public static extern void MgMotion_startPt_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPt_get")]
  public static extern IntPtr MgMotion_startPt_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPtM_set")]
  public static extern void MgMotion_startPtM_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPtM_get")]
  public static extern IntPtr MgMotion_startPtM_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_lastPt_set")]
  public static extern void MgMotion_lastPt_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_lastPt_get")]
  public static extern IntPtr MgMotion_lastPt_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_lastPtM_set")]
  public static extern void MgMotion_lastPtM_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_lastPtM_get")]
  public static extern IntPtr MgMotion_lastPtM_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_point_set")]
  public static extern void MgMotion_point_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_point_get")]
  public static extern IntPtr MgMotion_point_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_pointM_set")]
  public static extern void MgMotion_pointM_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_pointM_get")]
  public static extern IntPtr MgMotion_pointM_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPt2_set")]
  public static extern void MgMotion_startPt2_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPt2_get")]
  public static extern IntPtr MgMotion_startPt2_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPt2M_set")]
  public static extern void MgMotion_startPt2M_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startPt2M_get")]
  public static extern IntPtr MgMotion_startPt2M_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_point2_set")]
  public static extern void MgMotion_point2_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_point2_get")]
  public static extern IntPtr MgMotion_point2_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_point2M_set")]
  public static extern void MgMotion_point2M_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_point2M_get")]
  public static extern IntPtr MgMotion_point2M_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_d2mgs_set")]
  public static extern void MgMotion_d2mgs_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_d2mgs_get")]
  public static extern float MgMotion_d2mgs_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_d2m_set")]
  public static extern void MgMotion_d2m_set(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_d2m_get")]
  public static extern float MgMotion_d2m_get(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgMotion")]
  public static extern IntPtr new_MgMotion();

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_dragging")]
  public static extern bool MgMotion_dragging(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_cmds")]
  public static extern IntPtr MgMotion_cmds(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_toSelectCommand")]
  public static extern bool MgMotion_toSelectCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startCenterM")]
  public static extern IntPtr MgMotion_startCenterM(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_centerM")]
  public static extern IntPtr MgMotion_centerM(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_startDistanceM")]
  public static extern float MgMotion_startDistanceM(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_distanceM")]
  public static extern float MgMotion_distanceM(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_displayMmToModel__SWIG_0")]
  public static extern float MgMotion_displayMmToModel__SWIG_0(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgMotion_displayMmToModel__SWIG_1")]
  public static extern float MgMotion_displayMmToModel__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgMotion")]
  public static extern void delete_MgMotion(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCommand")]
  public static extern void delete_MgCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_getName")]
  public static extern string MgCommand_getName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_release")]
  public static extern void MgCommand_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_cancel")]
  public static extern bool MgCommand_cancel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_cancelSwigExplicitMgCommand")]
  public static extern bool MgCommand_cancelSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_initialize")]
  public static extern bool MgCommand_initialize(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_initializeSwigExplicitMgCommand")]
  public static extern bool MgCommand_initializeSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_backStep")]
  public static extern bool MgCommand_backStep(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_backStepSwigExplicitMgCommand")]
  public static extern bool MgCommand_backStepSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_draw")]
  public static extern bool MgCommand_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_gatherShapes")]
  public static extern int MgCommand_gatherShapes(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_gatherShapesSwigExplicitMgCommand")]
  public static extern int MgCommand_gatherShapesSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_click")]
  public static extern bool MgCommand_click(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_clickSwigExplicitMgCommand")]
  public static extern bool MgCommand_clickSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_doubleClick")]
  public static extern bool MgCommand_doubleClick(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_doubleClickSwigExplicitMgCommand")]
  public static extern bool MgCommand_doubleClickSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_longPress")]
  public static extern bool MgCommand_longPress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_longPressSwigExplicitMgCommand")]
  public static extern bool MgCommand_longPressSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_touchBegan")]
  public static extern bool MgCommand_touchBegan(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_touchBeganSwigExplicitMgCommand")]
  public static extern bool MgCommand_touchBeganSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_touchMoved")]
  public static extern bool MgCommand_touchMoved(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_touchMovedSwigExplicitMgCommand")]
  public static extern bool MgCommand_touchMovedSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_touchEnded")]
  public static extern bool MgCommand_touchEnded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_touchEndedSwigExplicitMgCommand")]
  public static extern bool MgCommand_touchEndedSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_mouseHover")]
  public static extern bool MgCommand_mouseHover(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_mouseHoverSwigExplicitMgCommand")]
  public static extern bool MgCommand_mouseHoverSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_twoFingersMove")]
  public static extern bool MgCommand_twoFingersMove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_twoFingersMoveSwigExplicitMgCommand")]
  public static extern bool MgCommand_twoFingersMoveSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_isDrawingCommand")]
  public static extern bool MgCommand_isDrawingCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_isDrawingCommandSwigExplicitMgCommand")]
  public static extern bool MgCommand_isDrawingCommandSwigExplicitMgCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_isFloatingCommand")]
  public static extern bool MgCommand_isFloatingCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_isFloatingCommandSwigExplicitMgCommand")]
  public static extern bool MgCommand_isFloatingCommandSwigExplicitMgCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_doContextAction")]
  public static extern bool MgCommand_doContextAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_doContextActionSwigExplicitMgCommand")]
  public static extern bool MgCommand_doContextActionSwigExplicitMgCommand(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgCommand")]
  public static extern IntPtr new_MgCommand();

  [DllImport("touchvg", EntryPoint="CSharp_MgCommand_director_connect")]
  public static extern void MgCommand_director_connect(HandleRef jarg1, MgCommand.SwigDelegateMgCommand_0 delegate0, MgCommand.SwigDelegateMgCommand_1 delegate1, MgCommand.SwigDelegateMgCommand_2 delegate2, MgCommand.SwigDelegateMgCommand_3 delegate3, MgCommand.SwigDelegateMgCommand_4 delegate4, MgCommand.SwigDelegateMgCommand_5 delegate5, MgCommand.SwigDelegateMgCommand_6 delegate6, MgCommand.SwigDelegateMgCommand_7 delegate7, MgCommand.SwigDelegateMgCommand_8 delegate8, MgCommand.SwigDelegateMgCommand_9 delegate9, MgCommand.SwigDelegateMgCommand_10 delegate10, MgCommand.SwigDelegateMgCommand_11 delegate11, MgCommand.SwigDelegateMgCommand_12 delegate12, MgCommand.SwigDelegateMgCommand_13 delegate13, MgCommand.SwigDelegateMgCommand_14 delegate14, MgCommand.SwigDelegateMgCommand_15 delegate15, MgCommand.SwigDelegateMgCommand_16 delegate16, MgCommand.SwigDelegateMgCommand_17 delegate17);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_NotNotify_get")]
  public static extern int MgShapesLock_NotNotify_get();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_ReadOnly_get")]
  public static extern int MgShapesLock_ReadOnly_get();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_Add_get")]
  public static extern int MgShapesLock_Add_get();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_Remove_get")]
  public static extern int MgShapesLock_Remove_get();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_Edit_get")]
  public static extern int MgShapesLock_Edit_get();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_Load_get")]
  public static extern int MgShapesLock_Load_get();

  [DllImport("touchvg", EntryPoint="CSharp_new_MgShapesLock__SWIG_0")]
  public static extern IntPtr new_MgShapesLock__SWIG_0(int jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgShapesLock__SWIG_1")]
  public static extern IntPtr new_MgShapesLock__SWIG_1(int jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgShapesLock__SWIG_2")]
  public static extern IntPtr new_MgShapesLock__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgShapesLock__SWIG_3")]
  public static extern IntPtr new_MgShapesLock__SWIG_3(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgShapesLock")]
  public static extern void delete_MgShapesLock(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_locked")]
  public static extern bool MgShapesLock_locked(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_lockedForRead")]
  public static extern bool MgShapesLock_lockedForRead(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_lockedForWrite")]
  public static extern bool MgShapesLock_lockedForWrite(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_getEditFlags")]
  public static extern int MgShapesLock_getEditFlags(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapesLock_resetEditFlags")]
  public static extern void MgShapesLock_resetEditFlags(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgDynShapeLock__SWIG_0")]
  public static extern IntPtr new_MgDynShapeLock__SWIG_0(bool jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgDynShapeLock__SWIG_1")]
  public static extern IntPtr new_MgDynShapeLock__SWIG_1(bool jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgDynShapeLock")]
  public static extern void delete_MgDynShapeLock(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDynShapeLock_locked")]
  public static extern bool MgDynShapeLock_locked(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDynShapeLock_lockedForRead")]
  public static extern bool MgDynShapeLock_lockedForRead(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDynShapeLock_lockedForWrite")]
  public static extern bool MgDynShapeLock_lockedForWrite(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onDocLoaded")]
  public static extern void CmdObserver_onDocLoaded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onEnterSelectCommand")]
  public static extern void CmdObserver_onEnterSelectCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onUnloadCommands")]
  public static extern void CmdObserver_onUnloadCommands(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_selectActionsNeedHided")]
  public static extern bool CmdObserver_selectActionsNeedHided(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_addShapeActions")]
  public static extern int CmdObserver_addShapeActions(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_doAction")]
  public static extern bool CmdObserver_doAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_doEndAction")]
  public static extern bool CmdObserver_doEndAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_drawInShapeCommand")]
  public static extern void CmdObserver_drawInShapeCommand(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_drawInSelectCommand")]
  public static extern void CmdObserver_drawInSelectCommand(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeWillAdded")]
  public static extern bool CmdObserver_onShapeWillAdded(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeAdded")]
  public static extern void CmdObserver_onShapeAdded(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeWillDeleted")]
  public static extern bool CmdObserver_onShapeWillDeleted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeDeleted")]
  public static extern void CmdObserver_onShapeDeleted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeCanRotated")]
  public static extern bool CmdObserver_onShapeCanRotated(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeCanTransform")]
  public static extern bool CmdObserver_onShapeCanTransform(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeCanUnlock")]
  public static extern bool CmdObserver_onShapeCanUnlock(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeCanUngroup")]
  public static extern bool CmdObserver_onShapeCanUngroup(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_onShapeMoved")]
  public static extern void CmdObserver_onShapeMoved(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_createShape")]
  public static extern IntPtr CmdObserver_createShape(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserver_createCommand")]
  public static extern IntPtr CmdObserver_createCommand(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_CmdObserver")]
  public static extern void delete_CmdObserver(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_CmdObserverDefault")]
  public static extern IntPtr new_CmdObserverDefault();

  [DllImport("touchvg", EntryPoint="CSharp_delete_CmdObserverDefault")]
  public static extern void delete_CmdObserverDefault(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onDocLoaded")]
  public static extern void CmdObserverDefault_onDocLoaded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onDocLoadedSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_onDocLoadedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onEnterSelectCommand")]
  public static extern void CmdObserverDefault_onEnterSelectCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onEnterSelectCommandSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_onEnterSelectCommandSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onUnloadCommands")]
  public static extern void CmdObserverDefault_onUnloadCommands(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onUnloadCommandsSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_onUnloadCommandsSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_selectActionsNeedHided")]
  public static extern bool CmdObserverDefault_selectActionsNeedHided(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_selectActionsNeedHidedSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_selectActionsNeedHidedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_doAction")]
  public static extern bool CmdObserverDefault_doAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_doActionSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_doActionSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_doEndAction")]
  public static extern bool CmdObserverDefault_doEndAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_doEndActionSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_doEndActionSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_drawInShapeCommand")]
  public static extern void CmdObserverDefault_drawInShapeCommand(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_drawInShapeCommandSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_drawInShapeCommandSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_drawInSelectCommand")]
  public static extern void CmdObserverDefault_drawInSelectCommand(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_drawInSelectCommandSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_drawInSelectCommandSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeWillAdded")]
  public static extern bool CmdObserverDefault_onShapeWillAdded(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeWillAddedSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_onShapeWillAddedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeAdded")]
  public static extern void CmdObserverDefault_onShapeAdded(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeAddedSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_onShapeAddedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeWillDeleted")]
  public static extern bool CmdObserverDefault_onShapeWillDeleted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeWillDeletedSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_onShapeWillDeletedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeDeleted")]
  public static extern void CmdObserverDefault_onShapeDeleted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeDeletedSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_onShapeDeletedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanRotated")]
  public static extern bool CmdObserverDefault_onShapeCanRotated(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanRotatedSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_onShapeCanRotatedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanTransform")]
  public static extern bool CmdObserverDefault_onShapeCanTransform(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanTransformSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_onShapeCanTransformSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanUnlock")]
  public static extern bool CmdObserverDefault_onShapeCanUnlock(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanUnlockSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_onShapeCanUnlockSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanUngroup")]
  public static extern bool CmdObserverDefault_onShapeCanUngroup(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeCanUngroupSwigExplicitCmdObserverDefault")]
  public static extern bool CmdObserverDefault_onShapeCanUngroupSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeMoved")]
  public static extern void CmdObserverDefault_onShapeMoved(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_onShapeMovedSwigExplicitCmdObserverDefault")]
  public static extern void CmdObserverDefault_onShapeMovedSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_createShape")]
  public static extern IntPtr CmdObserverDefault_createShape(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_createShapeSwigExplicitCmdObserverDefault")]
  public static extern IntPtr CmdObserverDefault_createShapeSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_createCommand")]
  public static extern IntPtr CmdObserverDefault_createCommand(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_createCommandSwigExplicitCmdObserverDefault")]
  public static extern IntPtr CmdObserverDefault_createCommandSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_addShapeActions")]
  public static extern int CmdObserverDefault_addShapeActions(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_addShapeActionsSwigExplicitCmdObserverDefault")]
  public static extern int CmdObserverDefault_addShapeActionsSwigExplicitCmdObserverDefault(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, HandleRef jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_director_connect")]
  public static extern void CmdObserverDefault_director_connect(HandleRef jarg1, CmdObserverDefault.SwigDelegateCmdObserverDefault_0 delegate0, CmdObserverDefault.SwigDelegateCmdObserverDefault_1 delegate1, CmdObserverDefault.SwigDelegateCmdObserverDefault_2 delegate2, CmdObserverDefault.SwigDelegateCmdObserverDefault_3 delegate3, CmdObserverDefault.SwigDelegateCmdObserverDefault_4 delegate4, CmdObserverDefault.SwigDelegateCmdObserverDefault_5 delegate5, CmdObserverDefault.SwigDelegateCmdObserverDefault_6 delegate6, CmdObserverDefault.SwigDelegateCmdObserverDefault_7 delegate7, CmdObserverDefault.SwigDelegateCmdObserverDefault_8 delegate8, CmdObserverDefault.SwigDelegateCmdObserverDefault_9 delegate9, CmdObserverDefault.SwigDelegateCmdObserverDefault_10 delegate10, CmdObserverDefault.SwigDelegateCmdObserverDefault_11 delegate11, CmdObserverDefault.SwigDelegateCmdObserverDefault_12 delegate12, CmdObserverDefault.SwigDelegateCmdObserverDefault_13 delegate13, CmdObserverDefault.SwigDelegateCmdObserverDefault_14 delegate14, CmdObserverDefault.SwigDelegateCmdObserverDefault_15 delegate15, CmdObserverDefault.SwigDelegateCmdObserverDefault_16 delegate16, CmdObserverDefault.SwigDelegateCmdObserverDefault_17 delegate17, CmdObserverDefault.SwigDelegateCmdObserverDefault_18 delegate18, CmdObserverDefault.SwigDelegateCmdObserverDefault_19 delegate19);

  [DllImport("touchvg", EntryPoint="CSharp_CmdSubject_registerObserver")]
  public static extern void CmdSubject_registerObserver(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_CmdSubject_unregisterObserver")]
  public static extern void CmdSubject_unregisterObserver(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_CmdSubject")]
  public static extern void delete_CmdSubject(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgCommandDraw")]
  public static extern IntPtr new_MgCommandDraw();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCommandDraw")]
  public static extern void delete_MgCommandDraw(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_addShape__SWIG_0")]
  public static extern IntPtr MgCommandDraw_addShape__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_addShape__SWIG_1")]
  public static extern IntPtr MgCommandDraw_addShape__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_addShape__SWIG_2")]
  public static extern IntPtr MgCommandDraw_addShape__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_delayClear")]
  public static extern void MgCommandDraw_delayClear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchBeganStep")]
  public static extern bool MgCommandDraw_touchBeganStep(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchMovedStep")]
  public static extern bool MgCommandDraw_touchMovedStep(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchEndedStep")]
  public static extern bool MgCommandDraw_touchEndedStep(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_createShape")]
  public static extern IntPtr MgCommandDraw_createShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_createShapeSwigExplicitMgCommandDraw")]
  public static extern IntPtr MgCommandDraw_createShapeSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_getMaxStep")]
  public static extern int MgCommandDraw_getMaxStep(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_getMaxStepSwigExplicitMgCommandDraw")]
  public static extern int MgCommandDraw_getMaxStepSwigExplicitMgCommandDraw(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_setStepPoint")]
  public static extern void MgCommandDraw_setStepPoint(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_setStepPointSwigExplicitMgCommandDraw")]
  public static extern void MgCommandDraw_setStepPointSwigExplicitMgCommandDraw(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_initialize")]
  public static extern bool MgCommandDraw_initialize(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_initializeSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_initializeSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_backStep")]
  public static extern bool MgCommandDraw_backStep(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_backStepSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_backStepSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_cancel")]
  public static extern bool MgCommandDraw_cancel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_cancelSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_cancelSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_draw")]
  public static extern bool MgCommandDraw_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_drawSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_drawSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_gatherShapes")]
  public static extern int MgCommandDraw_gatherShapes(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_gatherShapesSwigExplicitMgCommandDraw")]
  public static extern int MgCommandDraw_gatherShapesSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchBegan")]
  public static extern bool MgCommandDraw_touchBegan(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchBeganSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_touchBeganSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchMoved")]
  public static extern bool MgCommandDraw_touchMoved(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchMovedSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_touchMovedSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchEnded")]
  public static extern bool MgCommandDraw_touchEnded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_touchEndedSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_touchEndedSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_click")]
  public static extern bool MgCommandDraw_click(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_clickSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_clickSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_longPress")]
  public static extern bool MgCommandDraw_longPress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_longPressSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_longPressSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_mouseHover")]
  public static extern bool MgCommandDraw_mouseHover(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_mouseHoverSwigExplicitMgCommandDraw")]
  public static extern bool MgCommandDraw_mouseHoverSwigExplicitMgCommandDraw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_getStep")]
  public static extern int MgCommandDraw_getStep(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_setStep")]
  public static extern void MgCommandDraw_setStep(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_dynshape")]
  public static extern IntPtr MgCommandDraw_dynshape(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_snapPoint__SWIG_0")]
  public static extern IntPtr MgCommandDraw_snapPoint__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_snapPoint__SWIG_1")]
  public static extern IntPtr MgCommandDraw_snapPoint__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_snapPoint__SWIG_2")]
  public static extern IntPtr MgCommandDraw_snapPoint__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_snapPoint__SWIG_3")]
  public static extern IntPtr MgCommandDraw_snapPoint__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_director_connect")]
  public static extern void MgCommandDraw_director_connect(HandleRef jarg1, MgCommandDraw.SwigDelegateMgCommandDraw_0 delegate0, MgCommandDraw.SwigDelegateMgCommandDraw_1 delegate1, MgCommandDraw.SwigDelegateMgCommandDraw_2 delegate2, MgCommandDraw.SwigDelegateMgCommandDraw_3 delegate3, MgCommandDraw.SwigDelegateMgCommandDraw_4 delegate4, MgCommandDraw.SwigDelegateMgCommandDraw_5 delegate5, MgCommandDraw.SwigDelegateMgCommandDraw_6 delegate6, MgCommandDraw.SwigDelegateMgCommandDraw_7 delegate7, MgCommandDraw.SwigDelegateMgCommandDraw_8 delegate8, MgCommandDraw.SwigDelegateMgCommandDraw_9 delegate9, MgCommandDraw.SwigDelegateMgCommandDraw_10 delegate10, MgCommandDraw.SwigDelegateMgCommandDraw_11 delegate11, MgCommandDraw.SwigDelegateMgCommandDraw_12 delegate12, MgCommandDraw.SwigDelegateMgCommandDraw_13 delegate13, MgCommandDraw.SwigDelegateMgCommandDraw_14 delegate14, MgCommandDraw.SwigDelegateMgCommandDraw_15 delegate15, MgCommandDraw.SwigDelegateMgCommandDraw_16 delegate16, MgCommandDraw.SwigDelegateMgCommandDraw_17 delegate17, MgCommandDraw.SwigDelegateMgCommandDraw_18 delegate18, MgCommandDraw.SwigDelegateMgCommandDraw_19 delegate19, MgCommandDraw.SwigDelegateMgCommandDraw_20 delegate20);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_Name")]
  public static extern string MgCmdArc3P_Name();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_Create")]
  public static extern IntPtr MgCmdArc3P_Create();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_getName")]
  public static extern string MgCmdArc3P_getName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_release")]
  public static extern void MgCmdArc3P_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_touchBegan")]
  public static extern bool MgCmdArc3P_touchBegan(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_touchMoved")]
  public static extern bool MgCmdArc3P_touchMoved(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_touchEnded")]
  public static extern bool MgCmdArc3P_touchEnded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_initialize")]
  public static extern bool MgCmdArc3P_initialize(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_draw")]
  public static extern bool MgCmdArc3P_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCmdArc3P")]
  public static extern void delete_MgCmdArc3P(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcCSE_Name")]
  public static extern string MgCmdArcCSE_Name();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcCSE_Create")]
  public static extern IntPtr MgCmdArcCSE_Create();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcCSE_getName")]
  public static extern string MgCmdArcCSE_getName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcCSE_release")]
  public static extern void MgCmdArcCSE_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCmdArcCSE")]
  public static extern void delete_MgCmdArcCSE(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcTan_Name")]
  public static extern string MgCmdArcTan_Name();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcTan_Create")]
  public static extern IntPtr MgCmdArcTan_Create();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcTan_getName")]
  public static extern string MgCmdArcTan_getName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcTan_release")]
  public static extern void MgCmdArcTan_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCmdArcTan")]
  public static extern void delete_MgCmdArcTan(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_MgCmdDrawRect")]
  public static extern IntPtr new_MgCmdDrawRect();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_Name")]
  public static extern string MgCmdDrawRect_Name();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_Create")]
  public static extern IntPtr MgCmdDrawRect_Create();

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_getName")]
  public static extern string MgCmdDrawRect_getName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_getNameSwigExplicitMgCmdDrawRect")]
  public static extern string MgCmdDrawRect_getNameSwigExplicitMgCmdDrawRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_release")]
  public static extern void MgCmdDrawRect_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_releaseSwigExplicitMgCmdDrawRect")]
  public static extern void MgCmdDrawRect_releaseSwigExplicitMgCmdDrawRect(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_initialize")]
  public static extern bool MgCmdDrawRect_initialize(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_initializeSwigExplicitMgCmdDrawRect")]
  public static extern bool MgCmdDrawRect_initializeSwigExplicitMgCmdDrawRect(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_backStep")]
  public static extern bool MgCmdDrawRect_backStep(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_backStepSwigExplicitMgCmdDrawRect")]
  public static extern bool MgCmdDrawRect_backStepSwigExplicitMgCmdDrawRect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_touchBegan")]
  public static extern bool MgCmdDrawRect_touchBegan(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_touchBeganSwigExplicitMgCmdDrawRect")]
  public static extern bool MgCmdDrawRect_touchBeganSwigExplicitMgCmdDrawRect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_touchMoved")]
  public static extern bool MgCmdDrawRect_touchMoved(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_touchMovedSwigExplicitMgCmdDrawRect")]
  public static extern bool MgCmdDrawRect_touchMovedSwigExplicitMgCmdDrawRect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_touchEnded")]
  public static extern bool MgCmdDrawRect_touchEnded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_touchEndedSwigExplicitMgCmdDrawRect")]
  public static extern bool MgCmdDrawRect_touchEndedSwigExplicitMgCmdDrawRect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_addRectShape")]
  public static extern void MgCmdDrawRect_addRectShape(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_addRectShapeSwigExplicitMgCmdDrawRect")]
  public static extern void MgCmdDrawRect_addRectShapeSwigExplicitMgCmdDrawRect(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_director_connect")]
  public static extern void MgCmdDrawRect_director_connect(HandleRef jarg1, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_0 delegate0, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_1 delegate1, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_2 delegate2, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_3 delegate3, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_4 delegate4, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_5 delegate5, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_6 delegate6, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_7 delegate7, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_8 delegate8, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_9 delegate9, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_10 delegate10, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_11 delegate11, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_12 delegate12, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_13 delegate13, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_14 delegate14, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_15 delegate15, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_16 delegate16, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_17 delegate17, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_18 delegate18, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_19 delegate19, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_20 delegate20, MgCmdDrawRect.SwigDelegateMgCmdDrawRect_21 delegate21);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_release")]
  public static extern void MgCmdManager_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getCommandName")]
  public static extern string MgCmdManager_getCommandName(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getCommand")]
  public static extern IntPtr MgCmdManager_getCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_findCommand")]
  public static extern IntPtr MgCmdManager_findCommand(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_setCommand")]
  public static extern bool MgCmdManager_setCommand(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_cancel")]
  public static extern bool MgCmdManager_cancel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_unloadCommands")]
  public static extern void MgCmdManager_unloadCommands(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getNewShapeID")]
  public static extern int MgCmdManager_getNewShapeID(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_setNewShapeID")]
  public static extern void MgCmdManager_setNewShapeID(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_displayMmToModel__SWIG_0")]
  public static extern float MgCmdManager_displayMmToModel__SWIG_0(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_displayMmToModel__SWIG_1")]
  public static extern float MgCmdManager_displayMmToModel__SWIG_1(HandleRef jarg1, float jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_dynamicChangeEnded")]
  public static extern bool MgCmdManager_dynamicChangeEnded(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getSelection")]
  public static extern IntPtr MgCmdManager_getSelection(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getActionDispatcher")]
  public static extern IntPtr MgCmdManager_getActionDispatcher(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_doContextAction")]
  public static extern bool MgCmdManager_doContextAction(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getSnap")]
  public static extern IntPtr MgCmdManager_getSnap(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getCmdSubject")]
  public static extern IntPtr MgCmdManager_getCmdSubject(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_addImageShape__SWIG_0")]
  public static extern IntPtr MgCmdManager_addImageShape__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_addImageShape__SWIG_1")]
  public static extern IntPtr MgCmdManager_addImageShape__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManager_getBoundingBox")]
  public static extern void MgCmdManager_getBoundingBox(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCmdManager")]
  public static extern void delete_MgCmdManager(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdManagerFactory_create")]
  public static extern IntPtr MgCmdManagerFactory_create();

  [DllImport("touchvg", EntryPoint="CSharp_new_MgCmdManagerFactory")]
  public static extern IntPtr new_MgCmdManagerFactory();

  [DllImport("touchvg", EntryPoint="CSharp_delete_MgCmdManagerFactory")]
  public static extern void delete_MgCmdManagerFactory(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_Type")]
  public static extern int MgLayer_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_cloneLayer")]
  public static extern IntPtr MgLayer_cloneLayer(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_create")]
  public static extern IntPtr MgLayer_create(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_doc")]
  public static extern IntPtr MgLayer_doc(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_clone")]
  public static extern IntPtr MgLayer_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_copy")]
  public static extern void MgLayer_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_release")]
  public static extern void MgLayer_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_equals")]
  public static extern bool MgLayer_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_getType")]
  public static extern int MgLayer_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_isKindOf")]
  public static extern bool MgLayer_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_Type")]
  public static extern int MgShapeDoc_Type();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_cloneDoc")]
  public static extern IntPtr MgShapeDoc_cloneDoc(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_createDoc")]
  public static extern IntPtr MgShapeDoc_createDoc();

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_addRef")]
  public static extern void MgShapeDoc_addRef(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_save__SWIG_0")]
  public static extern bool MgShapeDoc_save__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_save__SWIG_1")]
  public static extern bool MgShapeDoc_save__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_load__SWIG_0")]
  public static extern bool MgShapeDoc_load__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_load__SWIG_1")]
  public static extern bool MgShapeDoc_load__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_clear")]
  public static extern void MgShapeDoc_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_clearCachedData")]
  public static extern void MgShapeDoc_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_draw")]
  public static extern int MgShapeDoc_draw(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getExtent")]
  public static extern IntPtr MgShapeDoc_getExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getShapeCount")]
  public static extern int MgShapeDoc_getShapeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getCurrentShapes")]
  public static extern IntPtr MgShapeDoc_getCurrentShapes(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_setCurrentShapes")]
  public static extern bool MgShapeDoc_setCurrentShapes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_switchLayer")]
  public static extern bool MgShapeDoc_switchLayer(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getLayerCount")]
  public static extern int MgShapeDoc_getLayerCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_context")]
  public static extern IntPtr MgShapeDoc_context(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_modelTransform")]
  public static extern IntPtr MgShapeDoc_modelTransform(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getPageRectW")]
  public static extern IntPtr MgShapeDoc_getPageRectW(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getViewScale")]
  public static extern float MgShapeDoc_getViewScale(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_setPageRectW")]
  public static extern void MgShapeDoc_setPageRectW(HandleRef jarg1, HandleRef jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getChangeCount")]
  public static extern int MgShapeDoc_getChangeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_clone")]
  public static extern IntPtr MgShapeDoc_clone(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_copy")]
  public static extern void MgShapeDoc_copy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_release")]
  public static extern void MgShapeDoc_release(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_equals")]
  public static extern bool MgShapeDoc_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_getType")]
  public static extern int MgShapeDoc_getType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_isKindOf")]
  public static extern bool MgShapeDoc_isKindOf(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiView")]
  public static extern void delete_GiView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_regenAll")]
  public static extern void GiView_regenAll(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_regenAppend")]
  public static extern void GiView_regenAppend(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_redraw")]
  public static extern void GiView_redraw(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_useFinger")]
  public static extern bool GiView_useFinger(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_useFingerSwigExplicitGiView")]
  public static extern bool GiView_useFingerSwigExplicitGiView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_isContextActionsVisible")]
  public static extern bool GiView_isContextActionsVisible(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_isContextActionsVisibleSwigExplicitGiView")]
  public static extern bool GiView_isContextActionsVisibleSwigExplicitGiView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_showContextActions")]
  public static extern bool GiView_showContextActions(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_showContextActionsSwigExplicitGiView")]
  public static extern bool GiView_showContextActionsSwigExplicitGiView(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_commandChanged")]
  public static extern void GiView_commandChanged(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_commandChangedSwigExplicitGiView")]
  public static extern void GiView_commandChangedSwigExplicitGiView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_selectionChanged")]
  public static extern void GiView_selectionChanged(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_selectionChangedSwigExplicitGiView")]
  public static extern void GiView_selectionChangedSwigExplicitGiView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_contentChanged")]
  public static extern void GiView_contentChanged(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiView_contentChangedSwigExplicitGiView")]
  public static extern void GiView_contentChangedSwigExplicitGiView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiView")]
  public static extern IntPtr new_GiView();

  [DllImport("touchvg", EntryPoint="CSharp_GiView_director_connect")]
  public static extern void GiView_director_connect(HandleRef jarg1, GiView.SwigDelegateGiView_0 delegate0, GiView.SwigDelegateGiView_1 delegate1, GiView.SwigDelegateGiView_2 delegate2, GiView.SwigDelegateGiView_3 delegate3, GiView.SwigDelegateGiView_4 delegate4, GiView.SwigDelegateGiView_5 delegate5, GiView.SwigDelegateGiView_6 delegate6, GiView.SwigDelegateGiView_7 delegate7, GiView.SwigDelegateGiView_8 delegate8);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiCoreView__SWIG_0")]
  public static extern IntPtr new_GiCoreView__SWIG_0(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiCoreView__SWIG_1")]
  public static extern IntPtr new_GiCoreView__SWIG_1();

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiCoreView")]
  public static extern void delete_GiCoreView(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_createView__SWIG_0")]
  public static extern void GiCoreView_createView__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_createView__SWIG_1")]
  public static extern void GiCoreView_createView__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_createMagnifierView")]
  public static extern void GiCoreView_createMagnifierView(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_destoryView")]
  public static extern void GiCoreView_destoryView(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_drawAll")]
  public static extern int GiCoreView_drawAll(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_drawAppend")]
  public static extern bool GiCoreView_drawAppend(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_dynDraw")]
  public static extern void GiCoreView_dynDraw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setBkColor")]
  public static extern int GiCoreView_setBkColor(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setScreenDpi")]
  public static extern void GiCoreView_setScreenDpi(int jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_onSize")]
  public static extern void GiCoreView_onSize(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_onGesture__SWIG_0")]
  public static extern bool GiCoreView_onGesture__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, float jarg5, float jarg6, bool jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_onGesture__SWIG_1")]
  public static extern bool GiCoreView_onGesture__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, float jarg5, float jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_twoFingersMove__SWIG_0")]
  public static extern bool GiCoreView_twoFingersMove__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7, bool jarg8);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_twoFingersMove__SWIG_1")]
  public static extern bool GiCoreView_twoFingersMove__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_isPressDragging")]
  public static extern bool GiCoreView_isPressDragging(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getGestureType")]
  public static extern int GiCoreView_getGestureType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getGestureState")]
  public static extern int GiCoreView_getGestureState(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getCommand")]
  public static extern string GiCoreView_getCommand(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setCommand__SWIG_0")]
  public static extern bool GiCoreView_setCommand__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, string jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setCommand__SWIG_1")]
  public static extern bool GiCoreView_setCommand__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_doContextAction")]
  public static extern bool GiCoreView_doContextAction(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_clearCachedData")]
  public static extern void GiCoreView_clearCachedData(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_addShapesForTest")]
  public static extern int GiCoreView_addShapesForTest(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getShapeCount")]
  public static extern int GiCoreView_getShapeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getChangeCount")]
  public static extern int GiCoreView_getChangeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getSelectedShapeCount")]
  public static extern int GiCoreView_getSelectedShapeCount(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getSelectedShapeType")]
  public static extern int GiCoreView_getSelectedShapeType(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_clear")]
  public static extern void GiCoreView_clear(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_loadFromFile")]
  public static extern bool GiCoreView_loadFromFile(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_saveToFile__SWIG_0")]
  public static extern bool GiCoreView_saveToFile__SWIG_0(HandleRef jarg1, string jarg2, bool jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_saveToFile__SWIG_1")]
  public static extern bool GiCoreView_saveToFile__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getContent")]
  public static extern string GiCoreView_getContent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_freeContent")]
  public static extern void GiCoreView_freeContent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setContent")]
  public static extern bool GiCoreView_setContent(HandleRef jarg1, string jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_zoomToExtent")]
  public static extern bool GiCoreView_zoomToExtent(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_zoomToModel")]
  public static extern bool GiCoreView_zoomToModel(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_calcPenWidth")]
  public static extern float GiCoreView_calcPenWidth(HandleRef jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getContext")]
  public static extern IntPtr GiCoreView_getContext(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setContext__SWIG_0")]
  public static extern void GiCoreView_setContext__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setContext__SWIG_1")]
  public static extern void GiCoreView_setContext__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_setContextEditing")]
  public static extern void GiCoreView_setContextEditing(HandleRef jarg1, bool jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_addImageShape__SWIG_0")]
  public static extern int GiCoreView_addImageShape__SWIG_0(HandleRef jarg1, string jarg2, float jarg3, float jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_addImageShape__SWIG_1")]
  public static extern int GiCoreView_addImageShape__SWIG_1(HandleRef jarg1, string jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getBoundingBox__SWIG_0")]
  public static extern bool GiCoreView_getBoundingBox__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_getBoundingBox__SWIG_1")]
  public static extern bool GiCoreView_getBoundingBox__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_viewAdapterHandle")]
  public static extern int GiCoreView_viewAdapterHandle(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_GiCoreView_viewAdapter")]
  public static extern IntPtr GiCoreView_viewAdapter(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_initRand")]
  public static extern void TestCanvas_initRand();

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_randInt")]
  public static extern int TestCanvas_randInt(int jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_randFloat")]
  public static extern float TestCanvas_randFloat(float jarg1, float jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_test__SWIG_0")]
  public static extern void TestCanvas_test__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, bool jarg4);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_test__SWIG_1")]
  public static extern void TestCanvas_test__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_test__SWIG_2")]
  public static extern void TestCanvas_test__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testRect")]
  public static extern void TestCanvas_testRect(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testLine")]
  public static extern void TestCanvas_testLine(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testEllipse")]
  public static extern void TestCanvas_testEllipse(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testQuadBezier")]
  public static extern void TestCanvas_testQuadBezier(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testCubicBezier")]
  public static extern void TestCanvas_testCubicBezier(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testPolygon")]
  public static extern void TestCanvas_testPolygon(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testClipPath")]
  public static extern void TestCanvas_testClipPath(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testHandle")]
  public static extern void TestCanvas_testHandle(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testDynCurves")]
  public static extern void TestCanvas_testDynCurves(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_TestCanvas_testTextAt")]
  public static extern void TestCanvas_testTextAt(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_new_TestCanvas")]
  public static extern IntPtr new_TestCanvas();

  [DllImport("touchvg", EntryPoint="CSharp_delete_TestCanvas")]
  public static extern void delete_TestCanvas(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_new_GiMouseHelper")]
  public static extern IntPtr new_GiMouseHelper(HandleRef jarg1, HandleRef jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_GiMouseHelper_onLButtonDown")]
  public static extern bool GiMouseHelper_onLButtonDown(HandleRef jarg1, float jarg2, float jarg3, bool jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiMouseHelper_onRButtonDown")]
  public static extern bool GiMouseHelper_onRButtonDown(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiMouseHelper_onMouseUp")]
  public static extern bool GiMouseHelper_onMouseUp(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiMouseHelper_onMouseMove")]
  public static extern bool GiMouseHelper_onMouseMove(HandleRef jarg1, float jarg2, float jarg3, bool jarg4, bool jarg5);

  [DllImport("touchvg", EntryPoint="CSharp_GiMouseHelper_onLButtonDblClk")]
  public static extern bool GiMouseHelper_onLButtonDblClk(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("touchvg", EntryPoint="CSharp_GiMouseHelper_onKeyDown")]
  public static extern bool GiMouseHelper_onKeyDown(HandleRef jarg1, int jarg2);

  [DllImport("touchvg", EntryPoint="CSharp_delete_GiMouseHelper")]
  public static extern void delete_GiMouseHelper(HandleRef jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgStorageBase_SWIGUpcast")]
  public static extern IntPtr MgStorageBase_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShape_SWIGUpcast")]
  public static extern IntPtr MgShape_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseShape_SWIGUpcast")]
  public static extern IntPtr MgBaseShape_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapes_SWIGUpcast")]
  public static extern IntPtr MgShapes_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLine_SWIGUpcast")]
  public static extern IntPtr MgLine_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseRect_SWIGUpcast")]
  public static extern IntPtr MgBaseRect_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRect_SWIGUpcast")]
  public static extern IntPtr MgRect_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgEllipse_SWIGUpcast")]
  public static extern IntPtr MgEllipse_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgRoundRect_SWIGUpcast")]
  public static extern IntPtr MgRoundRect_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgDiamond_SWIGUpcast")]
  public static extern IntPtr MgDiamond_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgBaseLines_SWIGUpcast")]
  public static extern IntPtr MgBaseLines_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLines_SWIGUpcast")]
  public static extern IntPtr MgLines_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgSplines_SWIGUpcast")]
  public static extern IntPtr MgSplines_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgParallel_SWIGUpcast")]
  public static extern IntPtr MgParallel_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgImageShape_SWIGUpcast")]
  public static extern IntPtr MgImageShape_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgArc_SWIGUpcast")]
  public static extern IntPtr MgArc_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgComposite_SWIGUpcast")]
  public static extern IntPtr MgComposite_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGroup_SWIGUpcast")]
  public static extern IntPtr MgGroup_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgGrid_SWIGUpcast")]
  public static extern IntPtr MgGrid_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_CmdObserverDefault_SWIGUpcast")]
  public static extern IntPtr CmdObserverDefault_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_CmdSubject_SWIGUpcast")]
  public static extern IntPtr CmdSubject_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCommandDraw_SWIGUpcast")]
  public static extern IntPtr MgCommandDraw_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArc3P_SWIGUpcast")]
  public static extern IntPtr MgCmdArc3P_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcCSE_SWIGUpcast")]
  public static extern IntPtr MgCmdArcCSE_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdArcTan_SWIGUpcast")]
  public static extern IntPtr MgCmdArcTan_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgCmdDrawRect_SWIGUpcast")]
  public static extern IntPtr MgCmdDrawRect_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgLayer_SWIGUpcast")]
  public static extern IntPtr MgLayer_SWIGUpcast(IntPtr jarg1);

  [DllImport("touchvg", EntryPoint="CSharp_MgShapeDoc_SWIGUpcast")]
  public static extern IntPtr MgShapeDoc_SWIGUpcast(IntPtr jarg1);
}

}
